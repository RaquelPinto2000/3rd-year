{"ast":null,"code":"var Mpeg1Muxer, child_process, events, util;\nchild_process = require('child_process');\nutil = require('util');\nevents = require('events');\n\nMpeg1Muxer = function Mpeg1Muxer(options) {\n  var key;\n  this.url = options.url;\n  this.ffmpegOptions = options.ffmpegOptions;\n  this.exitCode = undefined;\n  this.additionalFlags = [];\n\n  if (this.ffmpegOptions) {\n    for (key in this.ffmpegOptions) {\n      this.additionalFlags.push(key);\n\n      if (String(this.ffmpegOptions[key]) !== '') {\n        this.additionalFlags.push(String(this.ffmpegOptions[key]));\n      }\n    }\n  }\n\n  this.spawnOptions = [\"-i\", this.url, '-f', 'mpegts', '-codec:v', 'mpeg1video', // additional ffmpeg options go here\n  ...this.additionalFlags, '-'];\n  this.stream = child_process.spawn(options.ffmpegPath, this.spawnOptions, {\n    detached: false\n  });\n  this.inputStreamStarted = true;\n  this.stream.stdout.on('data', data => {\n    return this.emit('mpeg1data', data);\n  });\n  this.stream.stderr.on('data', data => {\n    return this.emit('ffmpegStderr', data);\n  });\n  this.stream.on('exit', (code, signal) => {\n    if (code === 1) {\n      console.error('RTSP stream exited with error');\n      this.exitCode = 1;\n      return this.emit('exitWithError');\n    }\n  });\n  return this;\n};\n\nutil.inherits(Mpeg1Muxer, events.EventEmitter);\nmodule.exports = Mpeg1Muxer;","map":{"version":3,"sources":["/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/node_modules/node-rtsp-stream/mpeg1muxer.js"],"names":["Mpeg1Muxer","child_process","events","util","require","options","key","url","ffmpegOptions","exitCode","undefined","additionalFlags","push","String","spawnOptions","stream","spawn","ffmpegPath","detached","inputStreamStarted","stdout","on","data","emit","stderr","code","signal","console","error","inherits","EventEmitter","module","exports"],"mappings":"AAAA,IAAIA,UAAJ,EAAgBC,aAAhB,EAA+BC,MAA/B,EAAuCC,IAAvC;AAEAF,aAAa,GAAGG,OAAO,CAAC,eAAD,CAAvB;AAEAD,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAd;AAEAF,MAAM,GAAGE,OAAO,CAAC,QAAD,CAAhB;;AAEAJ,UAAU,GAAG,oBAASK,OAAT,EAAkB;AAC7B,MAAIC,GAAJ;AACA,OAAKC,GAAL,GAAWF,OAAO,CAACE,GAAnB;AACA,OAAKC,aAAL,GAAqBH,OAAO,CAACG,aAA7B;AACA,OAAKC,QAAL,GAAgBC,SAAhB;AACA,OAAKC,eAAL,GAAuB,EAAvB;;AACA,MAAI,KAAKH,aAAT,EAAwB;AACtB,SAAKF,GAAL,IAAY,KAAKE,aAAjB,EAAgC;AAC9B,WAAKG,eAAL,CAAqBC,IAArB,CAA0BN,GAA1B;;AACA,UAAIO,MAAM,CAAC,KAAKL,aAAL,CAAmBF,GAAnB,CAAD,CAAN,KAAoC,EAAxC,EAA4C;AAC1C,aAAKK,eAAL,CAAqBC,IAArB,CAA0BC,MAAM,CAAC,KAAKL,aAAL,CAAmBF,GAAnB,CAAD,CAAhC;AACD;AACF;AACF;;AACD,OAAKQ,YAAL,GAAoB,CAClB,IADkB,EAElB,KAAKP,GAFa,EAGlB,IAHkB,EAIlB,QAJkB,EAKlB,UALkB,EAMlB,YANkB,EAOlB;AACA,KAAG,KAAKI,eARU,EASlB,GATkB,CAApB;AAWA,OAAKI,MAAL,GAAcd,aAAa,CAACe,KAAd,CAAoBX,OAAO,CAACY,UAA5B,EAAwC,KAAKH,YAA7C,EAA2D;AACvEI,IAAAA,QAAQ,EAAE;AAD6D,GAA3D,CAAd;AAGA,OAAKC,kBAAL,GAA0B,IAA1B;AACA,OAAKJ,MAAL,CAAYK,MAAZ,CAAmBC,EAAnB,CAAsB,MAAtB,EAA+BC,IAAD,IAAU;AACtC,WAAO,KAAKC,IAAL,CAAU,WAAV,EAAuBD,IAAvB,CAAP;AACD,GAFD;AAGA,OAAKP,MAAL,CAAYS,MAAZ,CAAmBH,EAAnB,CAAsB,MAAtB,EAA+BC,IAAD,IAAU;AACtC,WAAO,KAAKC,IAAL,CAAU,cAAV,EAA0BD,IAA1B,CAAP;AACD,GAFD;AAGA,OAAKP,MAAL,CAAYM,EAAZ,CAAe,MAAf,EAAuB,CAACI,IAAD,EAAOC,MAAP,KAAkB;AACvC,QAAID,IAAI,KAAK,CAAb,EAAgB;AACdE,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd;AACA,WAAKnB,QAAL,GAAgB,CAAhB;AACA,aAAO,KAAKc,IAAL,CAAU,eAAV,CAAP;AACD;AACF,GAND;AAOA,SAAO,IAAP;AACD,CA3CD;;AA6CApB,IAAI,CAAC0B,QAAL,CAAc7B,UAAd,EAA0BE,MAAM,CAAC4B,YAAjC;AAEAC,MAAM,CAACC,OAAP,GAAiBhC,UAAjB","sourcesContent":["var Mpeg1Muxer, child_process, events, util\n\nchild_process = require('child_process')\n\nutil = require('util')\n\nevents = require('events')\n\nMpeg1Muxer = function(options) {\n  var key\n  this.url = options.url\n  this.ffmpegOptions = options.ffmpegOptions\n  this.exitCode = undefined\n  this.additionalFlags = []\n  if (this.ffmpegOptions) {\n    for (key in this.ffmpegOptions) {\n      this.additionalFlags.push(key)\n      if (String(this.ffmpegOptions[key]) !== '') {\n        this.additionalFlags.push(String(this.ffmpegOptions[key]))\n      }\n    }\n  }\n  this.spawnOptions = [\n    \"-i\",\n    this.url,\n    '-f',\n    'mpegts',\n    '-codec:v',\n    'mpeg1video',\n    // additional ffmpeg options go here\n    ...this.additionalFlags,\n    '-'\n  ]\n  this.stream = child_process.spawn(options.ffmpegPath, this.spawnOptions, {\n    detached: false\n  })\n  this.inputStreamStarted = true\n  this.stream.stdout.on('data', (data) => {\n    return this.emit('mpeg1data', data)\n  })\n  this.stream.stderr.on('data', (data) => {\n    return this.emit('ffmpegStderr', data)\n  })\n  this.stream.on('exit', (code, signal) => {\n    if (code === 1) {\n      console.error('RTSP stream exited with error')\n      this.exitCode = 1\n      return this.emit('exitWithError')\n    }\n  })\n  return this\n}\n\nutil.inherits(Mpeg1Muxer, events.EventEmitter)\n\nmodule.exports = Mpeg1Muxer\n"]},"metadata":{},"sourceType":"script"}