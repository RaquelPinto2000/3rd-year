{"ast":null,"code":"import _slicedToArray from\"/home/raquel/Desktop/arc2-webapp/react_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";// react plugin used to create google maps\nimport{GoogleMap,Marker,withGoogleMap,withScriptjs,Polyline,Circle,DirectionsRenderer}from\"react-google-maps\";// core components\n/* global google */function MyDirectionsRenderer(props){const _useState=useState(null),_useState2=_slicedToArray(_useState,2),directions=_useState2[0],setDirections=_useState2[1];const origem=props.origem,destino=props.destino,travelMode=props.travelMode;useEffect(()=>{const directionsService=new google.maps.DirectionsService();directionsService.route({origin:new google.maps.LatLng(origem.lat,origem.lng),destination:new google.maps.LatLng(destino.lat,destino.lng),travelMode:travelMode},(result,status)=>{if(status===google.maps.DirectionsStatus.OK){setDirections(result);}else{console.error(\"error fetching directions \".concat(result));}});},[origem]);return/*#__PURE__*/React.createElement(React.Fragment,null,directions&&/*#__PURE__*/React.createElement(DirectionsRenderer,{directions:directions,options:{suppressMarkers:true,preserveViewport:true}}));}//{ directions &&<DirectionsRenderer directions={directions} options={{suppressMarkers:true}}/>}\n//&& <DirectionsRenderer directions={directions} options={{preserveViewport: true}} />\n/*{<GoogleMap\n            defaultCenter= {props.defaultCenter}\n            onZoomChanged={handleZoomChanged}\n          /> && directions && <DirectionsRenderer directions={directions} options={{suppressMarkers:true}} /> }*/ /*\nclass MapDirectionsRenderer extends React.Component {\n  state = {\n    directions: null,\n    error: null\n  };\n\n  componentDidMount() {\n    let { origem, destino, travelMode } = this.props;\n\n   \n    //const origin = waypoints.shift().location;\n    //const destination = waypoints.pop().location;\n    console.log(origem);\n    console.log(destino);\n\n    let directionsService = new google.maps.DirectionsService();\n    directionsService.route(\n      {\n        origin: new google.maps.LatLng(origem.lat, origem.lng),\n        destination: new google.maps.LatLng(destino.lat, destino.lng),\n        travelMode: travelMode\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.setState({\n            directions: result\n          });\n        } else {\n          this.setState({ error: result });\n        }\n      }\n    );\n  }\n\n  render() {\n    if (this.state.error) {\n      return <h1>{this.state.error}</h1>;\n    }\n    return <DirectionsRenderer directions={this.state.directions} />;\n  }\n}\n*/const MapWrapper=withScriptjs(withGoogleMap(props=>/*#__PURE__*/React.createElement(GoogleMap,{defaultCenter:props.defaultCenter,defaultZoom:props.zoom,defaultOptions:{scrollwheel:false}},props.markers.map((props,index)=>{return/*#__PURE__*/React.createElement(Marker,{position:{lat:props.lat,lng:props.lng},key:index,id:index,options:{icon:\"/accident_icon/\".concat(props.status)},onClick:()=>{if(props.id){window.location.href=\"/#admin/accident_details/\".concat(props.id);}}});}))));function handleMarkerClick(id_acc,id_target){console.log(\"Marker clicked!\");let res=fetch(\"/startStream/\".concat(id_acc,\"/\").concat(id_target));}function handleCenterChanged(){console.log(\"center\"+this.getCenter());return this.getCenter();}function handleZoomChanged(zoom){console.log(\"Zoom: \"+this.getZoom());//this refers to Google Map instance\n/*if(zoom != this.getZoom()){\n    zoom=this.getZoom()\n    console.log(\"zoomMudado =\" + zoom)\n    return this.getZoom()\n  }*/return this.getZoom();}const MapViewDirections_details=withScriptjs(withGoogleMap(props=>/*#__PURE__*/React.createElement(GoogleMap,{center:props.center,zoom:props.zoom,defaultOptions:{scrollwheel:false},onCenterChanged:handleCenterChanged//onZoomChanged={handleZoomChanged}\n},\",\",/*#__PURE__*/React.createElement(MyDirectionsRenderer,{destino:props.origem,origem:props.destino,travelMode:google.maps.TravelMode.DRIVING//defaultCenter= {props.defaultCenter}\n//onZoomChanged={handleZoomChanged}\n}),props.markers.map((props,index)=>/*#__PURE__*/React.createElement(Marker,{position:{lat:props.lat,lng:props.lng},key:index,id:index,options:{icon:\"/accident_icon/\".concat(props.status)},onClick:()=>{if(props.id){if(props.status!=5){{window.location.href=\"/#admin/accident_details/\".concat(props.id);}}else{{handleMarkerClick(props.id_acc,props.id);}}}}})))));class Maps extends React.Component{constructor(props){super(props);this.get_my_location=()=>{if(navigator.geolocation){return new Promise((resolve,reject)=>navigator.geolocation.getCurrentPosition(resolve,reject));}else{return new Promise(resolve=>resolve({}));}};this.state={lat:0,lng:0};}componentDidMount(){Promise.all([this.get_my_location()]).then(value=>{this.setState({lat:value[0].coords.latitude,lng:value[0].coords.longitude});});}render(){if(this.props.center)return/*#__PURE__*/ (/*<MapWrapper_details\n        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDcLG_2KgktdQJXLaeyQZHJzmvcSjNwoPM\"\n        loadingElement={<div style={{ height: `100%` }} />}\n        center = {this.props.center}\n        zoom = {this.props.zoom}\n        markers = {this.props.markers}\n        containerElement={\n            <div\n                className=\"map-canvas\"\n                id=\"map-canvas\"\n            />\n        }\n        mapElement={this.props.mapElement}\n      />,*/React.createElement(MapViewDirections_details,{googleMapURL:\"https://maps.googleapis.com/maps/api/js?key=AIzaSyA03XhgCxn-V9TsghBLpQ8LaScQLPgIJxs\",loadingElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\"}}),center:this.props.center//onCenterChanged={handleCenterChanged}\n,zoom:this.props.zoom,markers:this.props.markers,origem:this.props.origem,destino:this.props.destino,containerElement:/*#__PURE__*/React.createElement(\"div\",{className:\"map-canvas\",id:\"map-canvas\"}),mapElement:this.props.mapElement}));return/*#__PURE__*/React.createElement(MapWrapper,{googleMapURL:\"https://maps.googleapis.com/maps/api/js?key=AIzaSyA03XhgCxn-V9TsghBLpQ8LaScQLPgIJxs\",loadingElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\"}}),defaultCenter:this.state,zoom:this.props.zoom,markers:this.props.markers,containerElement:/*#__PURE__*/React.createElement(\"div\",{className:\"map-canvas\",id:\"map-canvas\"}),mapElement:this.props.mapElement});}}export default Maps;","map":{"version":3,"sources":["/home/raquel/Desktop/arc2-webapp/react_frontend/src/views/examples/Maps_Component.js"],"names":["React","useState","useEffect","GoogleMap","Marker","withGoogleMap","withScriptjs","Polyline","Circle","DirectionsRenderer","MyDirectionsRenderer","props","directions","setDirections","origem","destino","travelMode","directionsService","google","maps","DirectionsService","route","origin","LatLng","lat","lng","destination","result","status","DirectionsStatus","OK","console","error","suppressMarkers","preserveViewport","MapWrapper","defaultCenter","zoom","scrollwheel","markers","map","index","icon","id","window","location","href","handleMarkerClick","id_acc","id_target","log","res","fetch","handleCenterChanged","getCenter","handleZoomChanged","getZoom","MapViewDirections_details","center","TravelMode","DRIVING","Maps","Component","constructor","get_my_location","navigator","geolocation","Promise","resolve","reject","getCurrentPosition","state","componentDidMount","all","then","value","setState","coords","latitude","longitude","render","height","mapElement"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// react plugin used to create google maps\nimport {GoogleMap, Marker, withGoogleMap, withScriptjs,Polyline, Circle, DirectionsRenderer} from \"react-google-maps\";\n// core components\n/* global google */\n\nfunction MyDirectionsRenderer(props) {\n  const [directions, setDirections] = useState(null);\n  const { origem, destino, travelMode } = props;\n\n  useEffect(() => {\n    const directionsService = new google.maps.DirectionsService();\n    directionsService.route(\n      {\n        origin: new google.maps.LatLng(origem.lat, origem.lng),\n        destination: new google.maps.LatLng(destino.lat, destino.lng),\n        travelMode: travelMode\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          setDirections(result);\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n  }, [origem]);\n\n  return (\n    <React.Fragment>\n      \n      {directions && <DirectionsRenderer directions={directions} options={{suppressMarkers:true, preserveViewport: true} } /> }\n\n    </React.Fragment>\n  );\n}\n//{ directions &&<DirectionsRenderer directions={directions} options={{suppressMarkers:true}}/>}\n//&& <DirectionsRenderer directions={directions} options={{preserveViewport: true}} />\n/*{<GoogleMap\n            defaultCenter= {props.defaultCenter}\n            onZoomChanged={handleZoomChanged}\n          /> && directions && <DirectionsRenderer directions={directions} options={{suppressMarkers:true}} /> }*/\n\n\n/*\nclass MapDirectionsRenderer extends React.Component {\n  state = {\n    directions: null,\n    error: null\n  };\n\n  componentDidMount() {\n    let { origem, destino, travelMode } = this.props;\n\n   \n    //const origin = waypoints.shift().location;\n    //const destination = waypoints.pop().location;\n    console.log(origem);\n    console.log(destino);\n\n    let directionsService = new google.maps.DirectionsService();\n    directionsService.route(\n      {\n        origin: new google.maps.LatLng(origem.lat, origem.lng),\n        destination: new google.maps.LatLng(destino.lat, destino.lng),\n        travelMode: travelMode\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.setState({\n            directions: result\n          });\n        } else {\n          this.setState({ error: result });\n        }\n      }\n    );\n  }\n\n  render() {\n    if (this.state.error) {\n      return <h1>{this.state.error}</h1>;\n    }\n    return <DirectionsRenderer directions={this.state.directions} />;\n  }\n}\n*/\nconst MapWrapper = withScriptjs(\n    withGoogleMap(props => \n    <GoogleMap\n            defaultCenter= {props.defaultCenter}\n            defaultZoom={props.zoom}\n            defaultOptions={{\n              scrollwheel: false,\n            }}\n        >\n        {props.markers.map((props,index) =>{\n\n          return(\n          <Marker \n            position={{\n              lat: props.lat, \n              lng: props.lng\n            }}\n           key={index}\n           id={index}\n           options={{icon:`/accident_icon/${props.status}`}}\n           onClick={(() => \n            { if(props.id)\n                {window.location.href =`/#admin/accident_details/${props.id}`}\n              }\n              )}\n             />\n            );\n          })}\n        </GoogleMap>\n    ));\n\n\nfunction handleMarkerClick(id_acc, id_target) {\n  console.log(\"Marker clicked!\")\n  let res = (fetch(`/startStream/${id_acc}/${id_target}`));\n}\nfunction handleCenterChanged(){\n  console.log(\"center\" + this.getCenter())\n  return this.getCenter()\n\n}\nfunction handleZoomChanged(zoom){\n  console.log(\"Zoom: \" + this.getZoom()) //this refers to Google Map instance\n  /*if(zoom != this.getZoom()){\n    zoom=this.getZoom()\n    console.log(\"zoomMudado =\" + zoom)\n    return this.getZoom()\n  }*/\n  return this.getZoom()\n}\nconst MapViewDirections_details =  withScriptjs(\nwithGoogleMap(props => <GoogleMap\n        center= {props.center}\n        zoom={props.zoom}\n        defaultOptions={{\n          scrollwheel: false,\n        }}\n\n        onCenterChanged={handleCenterChanged}\n        //onZoomChanged={handleZoomChanged}\n    >,\n\n      <MyDirectionsRenderer\n        destino={props.origem}\n        origem={props.destino}\n        travelMode={google.maps.TravelMode.DRIVING}\n        //defaultCenter= {props.defaultCenter}\n        //onZoomChanged={handleZoomChanged}\n      />\n\n    {props.markers.map((props,index) =>\n      <Marker \n      position={{lat: props.lat, lng: props.lng}}\n      key={index}\n      id={index}\n      options={{icon:`/accident_icon/${props.status}`}}\n        onClick={(() => \n        { if(props.id){\n            if (props.status != 5) {\n              {window.location.href =`/#admin/accident_details/${props.id}`}\n            }else{\n            {handleMarkerClick(props.id_acc, props.id)}\n            }\n          }\n        }\n        )}\n          >\n        </Marker>\n    )}\n    \n    </GoogleMap>\n));\n\nclass Maps extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      lat: 0,\n      lng: 0\n    }\n  }\n\n  componentDidMount(){\n    Promise.all([this.get_my_location()]).then((value) => {\n      this.setState(\n        {\n          lat: value[0].coords.latitude,\n          lng: value[0].coords.longitude\n        })})\n  }\n\n  get_my_location = () => {\n    if (navigator.geolocation) {\n      return new Promise(\n        (resolve, reject) => navigator.geolocation.getCurrentPosition(resolve, reject)\n      )\n    } else {\n      return new Promise(\n        resolve => resolve({})\n      )\n    }\n  }\n\n  render() \n  {\n    if (this.props.center)\n      return(\n        /*<MapWrapper_details\n        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDcLG_2KgktdQJXLaeyQZHJzmvcSjNwoPM\"\n        loadingElement={<div style={{ height: `100%` }} />}\n        center = {this.props.center}\n        zoom = {this.props.zoom}\n        markers = {this.props.markers}\n        containerElement={\n            <div\n                className=\"map-canvas\"\n                id=\"map-canvas\"\n            />\n        }\n        mapElement={this.props.mapElement}\n      />,*/\n      <MapViewDirections_details\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyA03XhgCxn-V9TsghBLpQ8LaScQLPgIJxs\"\n          loadingElement={<div style={{ height: `100%` }} />}\n          center = {this.props.center}\n          //onCenterChanged={handleCenterChanged}\n          zoom = {this.props.zoom}\n          markers = {this.props.markers}\n          origem={this.props.origem}\n          destino={this.props.destino}\n          containerElement={\n              <div\n                  className=\"map-canvas\"\n                  id=\"map-canvas\"\n              />\n          }\n          mapElement={this.props.mapElement}\n        />\n    )\n    return (\n    <MapWrapper\n        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyA03XhgCxn-V9TsghBLpQ8LaScQLPgIJxs\"\n        loadingElement={<div style={{ height: `100%` }} />}\n        defaultCenter = {this.state}\n        zoom = {this.props.zoom}\n        markers = {this.props.markers}\n        containerElement={\n            <div\n                className=\"map-canvas\"\n                id=\"map-canvas\"\n            />\n        }\n        mapElement={this.props.mapElement}\n    />\n\n    );\n  }\n}\n\nexport default Maps;"]},"metadata":{},"sourceType":"module"}