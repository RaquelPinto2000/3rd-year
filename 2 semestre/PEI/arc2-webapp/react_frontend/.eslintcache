[{"/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/index.js":"1","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/layouts/Admin.js":"2","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/layouts/Auth.js":"3","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/routes.js":"4","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/components/Footers/AdminFooter.js":"5","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/components/Navbars/AuthNavbar.js":"6","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/components/Footers/AuthFooter.js":"7","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/components/Navbars/AdminNavbar.js":"8","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/components/Sidebar/Sidebar.js":"9","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/Index.js":"10","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/examples/Profile.js":"11","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/examples/Maps_Page.js":"12","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/Login.js":"13","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/examples/Register.js":"14","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/examples/Accidents.js":"15","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/examples/Edit_profile.js":"16","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/examples/Users_table.js":"17","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/examples/Video_Call_Sender.js":"18","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/examples/Video_Call_Receiver.js":"19","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/examples/AccidentDetails.js":"20","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/examples/Maps_Component.js":"21","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/components/Headers/Header.js":"22","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/components/Headers/UserHeader.js":"23","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/variables/charts.js":"24","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/components/Players/JsmpegPlayer.js":"25","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/components/Headers/Example.js":"26","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/components/Headers/Timer.js":"27"},{"size":1323,"mtime":1623237039052,"results":"28","hashOfConfig":"29"},{"size":2521,"mtime":1623237039052,"results":"30","hashOfConfig":"29"},{"size":3098,"mtime":1623237039052,"results":"31","hashOfConfig":"29"},{"size":2862,"mtime":1623237039052,"results":"32","hashOfConfig":"29"},{"size":2728,"mtime":1623237039052,"results":"33","hashOfConfig":"29"},{"size":3465,"mtime":1623237039052,"results":"34","hashOfConfig":"29"},{"size":2841,"mtime":1623237039052,"results":"35","hashOfConfig":"29"},{"size":5160,"mtime":1623237039052,"results":"36","hashOfConfig":"29"},{"size":10333,"mtime":1623237039052,"results":"37","hashOfConfig":"29"},{"size":13546,"mtime":1623237039056,"results":"38","hashOfConfig":"29"},{"size":4549,"mtime":1623237039056,"results":"39","hashOfConfig":"29"},{"size":2273,"mtime":1623237039056,"results":"40","hashOfConfig":"29"},{"size":5173,"mtime":1623237039056,"results":"41","hashOfConfig":"29"},{"size":5508,"mtime":1623237039056,"results":"42","hashOfConfig":"29"},{"size":22570,"mtime":1623237039056,"results":"43","hashOfConfig":"29"},{"size":17509,"mtime":1623237039056,"results":"44","hashOfConfig":"29"},{"size":21688,"mtime":1623237039056,"results":"45","hashOfConfig":"29"},{"size":1720,"mtime":1623237039056,"results":"46","hashOfConfig":"29"},{"size":4224,"mtime":1623237039056,"results":"47","hashOfConfig":"29"},{"size":38221,"mtime":1623244291665,"results":"48","hashOfConfig":"29"},{"size":6403,"mtime":1623237039056,"results":"49","hashOfConfig":"29"},{"size":2689,"mtime":1623237039052,"results":"50","hashOfConfig":"29"},{"size":2275,"mtime":1623237039052,"results":"51","hashOfConfig":"29"},{"size":11704,"mtime":1623237039056,"results":"52","hashOfConfig":"29"},{"size":974,"mtime":1623237039052,"results":"53","hashOfConfig":"29"},{"size":3109,"mtime":1623237039052,"results":"54","hashOfConfig":"29"},{"size":3268,"mtime":1623237039052,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ky7h9y",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},"/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/index.js",[],"/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/layouts/Admin.js",[],"/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/layouts/Auth.js",[],"/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/routes.js",["126","127"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Index from \"views/Index.js\";\nimport Profile from \"views/examples/Profile.js\";\nimport Maps from \"views/examples/Maps_Page.js\";\nimport Register from \"views/examples/Register.js\";\nimport Login from \"views/Login.js\";\nimport Accidents from \"views/examples/Accidents.js\";\nimport AccidentDetails from \"views/examples/AccidentDetails\";\nimport Edit_profile from \"views/examples/Edit_profile\";\nimport Users_table from \"views/examples/Users_table\";\nimport Video_Call_Sender from \"views/examples/Video_Call_Sender\";\nimport Video_Call_Receiver from \"views/examples/Video_Call_Receiver\";\n\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/accident_details/:id\",\n    name: \"Accident Details\",\n    icon: \"ni ni-planet text-blue\",\n    component: AccidentDetails,\n    layout: \"/admin\"\n  },\n   {\n    path: \"/maps\",\n    name: \"Maps\",\n    icon: \"ni ni-pin-3 text-orange\",\n    component: Maps,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/user-profile\",\n    name: \"User Profile\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Profile,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/accidents\",\n    name: \"Accidents\",\n    icon: \"ni ni-ambulance text-purple\",\n    component: Accidents,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/login\",\n    name: \"Login\",\n    icon: \"ni ni-key-25 text-info\",\n    component: Login,\n    layout: \"/auth\"\n  },\n  {\n    path: \"/register\",\n    name: \"Register\",\n    icon: \"ni ni-circle-08 text-pink\",\n    component: Register,\n    layout: \"/auth\"\n  },\n  {\n    path: \"/edit_profile\",\n    name: \"Edit Profile\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Edit_profile,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/users_table\",\n    name: \"Users Table\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Users_table,\n    layout: \"/admin\"\n  }\n  /*,{\n    path: \"/video_call_sender\",\n    name: \"Video Call Sender\",\n    icon: \"ni ni-circle-08 text-pink\",\n    component: Video_Call_Sender,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/video_call_receiver\",\n    name: \"Video Call Receiver\",\n    icon: \"ni ni-circle-08 text-pink\",\n    component: Video_Call_Receiver,\n    layout: \"/admin\"\n  },*/\n];\nexport default routes;\n","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/components/Footers/AdminFooter.js",[],"/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/components/Navbars/AuthNavbar.js",[],"/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/components/Footers/AuthFooter.js",[],"/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/components/Navbars/AdminNavbar.js",[],"/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/components/Sidebar/Sidebar.js",[],"/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/Index.js",["128","129","130"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartOptions,\n  parseOptions,\n  chartExample1,\n  chartExample2\n} from \"../variables/charts.js\";\n\nimport Header from \"../components/Headers/Header.js\";\n\nclass Index extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      activeNav: 1,\n      chartExample1Data: \"data1\"\n    };\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n  }\n  toggleNavs = (e, index) => {\n    e.preventDefault();\n    this.setState({\n      activeNav: index,\n      chartExample1Data:\n        this.state.chartExample1Data === \"data1\" ? \"data2\" : \"data1\"\n    });\n  };\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n              <Card className=\"bg-gradient-default shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                        Overview\n                      </h6>\n                      <h2 className=\"text-white mb-0\">Accidents</h2>\n                    </div>\n                    <div className=\"col\">\n                      <Nav className=\"justify-content-end\" pills>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 1\n                            })}\n                            href=\"#pablo\"\n                            onClick={e => this.toggleNavs(e, 1)}\n                          >\n                            <span className=\"d-none d-md-block\">Month</span>\n                            <span className=\"d-md-none\">M</span>\n                          </NavLink>\n                        </NavItem>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 2\n                            })}\n                            data-toggle=\"tab\"\n                            href=\"#pablo\"\n                            onClick={e => this.toggleNavs(e, 2)}\n                          >\n                            <span className=\"d-none d-md-block\">Week</span>\n                            <span className=\"d-md-none\">W</span>\n                          </NavLink>\n                        </NavItem>\n                      </Nav>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Line\n                      data={chartExample1[this.state.chartExample1Data]}\n                      options={chartExample1.options}\n                      getDatasetAtEvent={e => console.log(e)}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xl=\"4\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\n                        Performance\n                      </h6>\n                      <h2 className=\"mb-0\">Accidents by Discticts</h2>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Bar\n                      data={chartExample2.data}\n                      options={chartExample2.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          {/*<Row className=\"mt-5\">*/}\n          {/*  <Col className=\"mb-5 mb-xl-0\" xl=\"8\">*/}\n          {/*    <Card className=\"shadow\">*/}\n          {/*      <CardHeader className=\"border-0\">*/}\n          {/*        <Row className=\"align-items-center\">*/}\n          {/*          <div className=\"col\">*/}\n          {/*            <h3 className=\"mb-0\">Page visits</h3>*/}\n          {/*          </div>*/}\n          {/*          <div className=\"col text-right\">*/}\n          {/*            <Button*/}\n          {/*              color=\"primary\"*/}\n          {/*              href=\"#pablo\"*/}\n          {/*              onClick={e => e.preventDefault()}*/}\n          {/*              size=\"sm\"*/}\n          {/*            >*/}\n          {/*              See all*/}\n          {/*            </Button>*/}\n          {/*          </div>*/}\n          {/*        </Row>*/}\n          {/*      </CardHeader>*/}\n          {/*      <Table className=\"align-items-center table-flush\" responsive>*/}\n          {/*        <thead className=\"thead-light\">*/}\n          {/*          <tr>*/}\n          {/*            <th scope=\"col\">Page name</th>*/}\n          {/*            <th scope=\"col\">Visitors</th>*/}\n          {/*            <th scope=\"col\">Unique users</th>*/}\n          {/*            <th scope=\"col\">Bounce rate</th>*/}\n          {/*          </tr>*/}\n          {/*        </thead>*/}\n          {/*        <tbody>*/}\n          {/*          <tr>*/}\n          {/*            <th scope=\"row\">/argon/</th>*/}\n          {/*            <td>4,569</td>*/}\n          {/*            <td>340</td>*/}\n          {/*            <td>*/}\n          {/*              <i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}*/}\n          {/*              46,53%*/}\n          {/*            </td>*/}\n          {/*          </tr>*/}\n          {/*          <tr>*/}\n          {/*            <th scope=\"row\">/argon/index.html</th>*/}\n          {/*            <td>3,985</td>*/}\n          {/*            <td>319</td>*/}\n          {/*            <td>*/}\n          {/*              <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}*/}\n          {/*              46,53%*/}\n          {/*            </td>*/}\n          {/*          </tr>*/}\n          {/*          <tr>*/}\n          {/*            <th scope=\"row\">/argon/charts.html</th>*/}\n          {/*            <td>3,513</td>*/}\n          {/*            <td>294</td>*/}\n          {/*            <td>*/}\n          {/*              <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}*/}\n          {/*              36,49%*/}\n          {/*            </td>*/}\n          {/*          </tr>*/}\n          {/*          <tr>*/}\n          {/*            <th scope=\"row\">/argon/tables.html</th>*/}\n          {/*            <td>2,050</td>*/}\n          {/*            <td>147</td>*/}\n          {/*            <td>*/}\n          {/*              <i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}*/}\n          {/*              50,87%*/}\n          {/*            </td>*/}\n          {/*          </tr>*/}\n          {/*          <tr>*/}\n          {/*            <th scope=\"row\">/argon/profile.html</th>*/}\n          {/*            <td>1,795</td>*/}\n          {/*            <td>190</td>*/}\n          {/*            <td>*/}\n          {/*              <i className=\"fas fa-arrow-down text-danger mr-3\" />{\" \"}*/}\n          {/*              46,53%*/}\n          {/*            </td>*/}\n          {/*          </tr>*/}\n          {/*        </tbody>*/}\n          {/*      </Table>*/}\n          {/*    </Card>*/}\n          {/*  </Col>*/}\n          {/*  <Col xl=\"4\">*/}\n          {/*    <Card className=\"shadow\">*/}\n          {/*      <CardHeader className=\"border-0\">*/}\n          {/*        <Row className=\"align-items-center\">*/}\n          {/*          <div className=\"col\">*/}\n          {/*            <h3 className=\"mb-0\">Social traffic</h3>*/}\n          {/*          </div>*/}\n          {/*          <div className=\"col text-right\">*/}\n          {/*            <Button*/}\n          {/*              color=\"primary\"*/}\n          {/*              href=\"#pablo\"*/}\n          {/*              onClick={e => e.preventDefault()}*/}\n          {/*              size=\"sm\"*/}\n          {/*            >*/}\n          {/*              See all*/}\n          {/*            </Button>*/}\n          {/*          </div>*/}\n          {/*        </Row>*/}\n          {/*      </CardHeader>*/}\n          {/*      <Table className=\"align-items-center table-flush\" responsive>*/}\n          {/*        <thead className=\"thead-light\">*/}\n          {/*          <tr>*/}\n          {/*            <th scope=\"col\">Referral</th>*/}\n          {/*            <th scope=\"col\">Visitors</th>*/}\n          {/*            <th scope=\"col\" />*/}\n          {/*          </tr>*/}\n          {/*        </thead>*/}\n          {/*        <tbody>*/}\n          {/*          <tr>*/}\n          {/*            <th scope=\"row\">Facebook</th>*/}\n          {/*            <td>1,480</td>*/}\n          {/*            <td>*/}\n          {/*              <div className=\"d-flex align-items-center\">*/}\n          {/*                <span className=\"mr-2\">60%</span>*/}\n          {/*                <div>*/}\n          {/*                  <Progress*/}\n          {/*                    max=\"100\"*/}\n          {/*                    value=\"60\"*/}\n          {/*                    barClassName=\"bg-gradient-danger\"*/}\n          {/*                  />*/}\n          {/*                </div>*/}\n          {/*              </div>*/}\n          {/*            </td>*/}\n          {/*          </tr>*/}\n          {/*          <tr>*/}\n          {/*            <th scope=\"row\">Facebook</th>*/}\n          {/*            <td>5,480</td>*/}\n          {/*            <td>*/}\n          {/*              <div className=\"d-flex align-items-center\">*/}\n          {/*                <span className=\"mr-2\">70%</span>*/}\n          {/*                <div>*/}\n          {/*                  <Progress*/}\n          {/*                    max=\"100\"*/}\n          {/*                    value=\"70\"*/}\n          {/*                    barClassName=\"bg-gradient-success\"*/}\n          {/*                  />*/}\n          {/*                </div>*/}\n          {/*              </div>*/}\n          {/*            </td>*/}\n          {/*          </tr>*/}\n          {/*          <tr>*/}\n          {/*            <th scope=\"row\">Google</th>*/}\n          {/*            <td>4,807</td>*/}\n          {/*            <td>*/}\n          {/*              <div className=\"d-flex align-items-center\">*/}\n          {/*                <span className=\"mr-2\">80%</span>*/}\n          {/*                <div>*/}\n          {/*                  <Progress max=\"100\" value=\"80\" />*/}\n          {/*                </div>*/}\n          {/*              </div>*/}\n          {/*            </td>*/}\n          {/*          </tr>*/}\n          {/*          <tr>*/}\n          {/*            <th scope=\"row\">Instagram</th>*/}\n          {/*            <td>3,678</td>*/}\n          {/*            <td>*/}\n          {/*              <div className=\"d-flex align-items-center\">*/}\n          {/*                <span className=\"mr-2\">75%</span>*/}\n          {/*                <div>*/}\n          {/*                  <Progress*/}\n          {/*                    max=\"100\"*/}\n          {/*                    value=\"75\"*/}\n          {/*                    barClassName=\"bg-gradient-info\"*/}\n          {/*                  />*/}\n          {/*                </div>*/}\n          {/*              </div>*/}\n          {/*            </td>*/}\n          {/*          </tr>*/}\n          {/*          <tr>*/}\n          {/*            <th scope=\"row\">twitter</th>*/}\n          {/*            <td>2,645</td>*/}\n          {/*            <td>*/}\n          {/*              <div className=\"d-flex align-items-center\">*/}\n          {/*                <span className=\"mr-2\">30%</span>*/}\n          {/*                <div>*/}\n          {/*                  <Progress*/}\n          {/*                    max=\"100\"*/}\n          {/*                    value=\"30\"*/}\n          {/*                    barClassName=\"bg-gradient-warning\"*/}\n          {/*                  />*/}\n          {/*                </div>*/}\n          {/*              </div>*/}\n          {/*            </td>*/}\n          {/*          </tr>*/}\n          {/*        </tbody>*/}\n          {/*      </Table>*/}\n          {/*    </Card>*/}\n          {/*  </Col>*/}\n          {/*</Row>*/}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Index;\n","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/examples/Profile.js",["131","132","133"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"../../components/Headers/UserHeader.js\";\nimport {Redirect} from \"react-router-dom\";\n\nclass Profile extends React.Component {\n\n   constructor(props) {\n    super(props);\n\n    this.state = {\n      user:[]\n\n    }\n   }\n\n  onEditProfile = () => {\n      return <Redirect to=\"/admin/edit_profile\"/>\n  }\n\n  getData = async () => {\n      try {\n           const response = await fetch(\n              `/home`\n          );\n\n          const result = await response.json();\n\n          this.setState(\n              prevState => (\n                  {\n                      user: result\n                  }\n              )\n          );\n      }\n    catch(e){\n         this.setState(\n             prevState => (\n                 {\n                     error: \"No accidents do Show\"\n                 }\n             )\n         );\n     }\n  }\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return (\n      <>\n        <UserHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col>\n              <Card className=\"card-profile shadow\">\n                <Row className=\"justify-content-center\">\n                  <Col className=\"order-lg-2\" lg=\"3\">\n                    <div className=\"card-profile-image\">\n                      <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                        <img\n                          alt=\"...\"\n                          className=\"rounded-circle\"\n                          src={require(\"../../assets/img/theme/administrative1.png\")}\n                        />\n                      </a>\n                    </div>\n                  </Col>\n                </Row>\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                  <div className=\"d-flex justify-content-end\">\n                      <Button\n                        color=\"default\"\n                        href=\"/#admin/edit_profile\"\n                        onClick= {this.onEditProfile}\n                        size=\"sm\"\n                      >\n                        Edit profile\n                      </Button>\n                  </div>\n                </CardHeader>\n                <CardBody className=\"pt-0 pt-md-4\">\n                  <Row>\n                    <div className=\"col\">\n                      <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\n                      </div>\n                    </div>\n                  </Row>\n                  <div className=\"text-center\">\n                    <h3>\n                        {this.state.user[\"first_name\"]}\n                      <span className=\"font-weight-light\">, 27</span>\n                    </h3>\n                    <div className=\"h5 font-weight-300\">\n                      <i className=\"ni location_pin mr-2\" />\n                      {this.state.user[\"city\"]}\n                    </div>\n                    <div className=\"h5 mt-4\">\n                      <i className=\"ni business_briefcase-24 mr-2\" />\n                      {this.state.user[\"profession\"]}\n                    </div>\n                    <div>\n                      <i className=\"ni education_hat mr-2\" />\n                      {this.state.user[\"work_institution\"]}\n                    </div>\n                    <hr className=\"my-4\" />\n                    <p>\n                      {this.state.user[\"about\"]}\n                    </p>\n                    <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                      Show more\n                    </a>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/examples/Maps_Page.js",[],"/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/Login.js",["134","135"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col\n} from \"reactstrap\";\nimport {Redirect} from \"react-router-dom\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    //static int a ++;\n    this.state = {\n        email: \"\" ,\n        passwd:\"\",\n        remember:\"False\",\n        error: false};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this)\n\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n     this.setState({\n      [name]: value\n    });\n\n    }\n    handleSubmit(event) {\n     event.preventDefault();\n    fetch('/login/request', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      email: this.state.email,\n      passwd: this.state.passwd\n    }),\n    }).then(res => res.json())\n      .then(\n        (result) => {\n          if(result['response']==\"Done\")\n            this.props.history.push(\"/admin\");\n          else{\n            this.setState({ error: result['error'] });\n\n          }\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error: \"error\"\n          });\n        }\n      )\n\n  }\n\n\n  onCreateAccount = () => {\n    return <Redirect to=\"/auth/Register\"/>\n  }\n\n  render() {\n    return (\n      <>\n        <Col lg=\"5\" md=\"7\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardBody className=\"px-lg-5 py-lg-5\">\n              <div className=\"text-center text-muted mb-4\">\n                <small>Sign in with credentials</small>\n              </div>\n              <Form role=\"form\" >\n                <FormGroup className=\"mb-3\">\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-email-83\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Email\" name = \"email\" type=\"email\" value = {this.state.email}  onChange={this.handleChange} autoComplete=\"new-email\"/>\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-lock-circle-open\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Password\" type=\"password\" name = \"passwd\" value = {this.state.passwd}  onChange={this.handleChange} autoComplete=\"new-password\"/>\n                  </InputGroup>\n                </FormGroup>\n                {this.state.error && <p style={{ color: 'red' }}> Login Failed. {this.state.error} </p>}\n                <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                  <input\n                    className=\"custom-control-input\"\n                    id=\" customCheckLogin\"\n                    type=\"checkbox\"\n                  />\n                  <label\n                    className=\"custom-control-label\"\n                    htmlFor=\" customCheckLogin\"\n                  >\n                    <span className=\"text-muted\">Remember me</span>\n                  </label>\n                </div>\n                <div className=\"text-center\">\n                  <Button className=\"my-4\" color=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\n                    Sign in\n                  </Button>\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n          <Row className=\"mt-3\">\n            <Col xs=\"6\">\n              <a\n                className=\"text-light\"\n                href=\"#pablo\"\n                onClick={e => e.preventDefault()}\n              >\n                <small>Forgot password?</small>\n              </a>\n            </Col>\n            <Col className=\"text-right\" xs=\"6\">\n              <a\n                className=\"text-light\"\n                href=\"/#auth/register\"\n                onClick={this.onCreateAccount}\n              >\n                <small>Create new account</small>\n              </a>\n            </Col>\n          </Row>\n        </Col>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/examples/Register.js",["136","137"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    //static int a ++;\n    this.state = {\n        username:\"\",\n        email: \"\" ,\n        passwd:\"\",\n        remember:\"False\",\n        error: false};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this)\n\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n     this.setState({\n      [name]: value\n    });\n\n    }\n    handleSubmit(event) {\n     event.preventDefault();\n    fetch('/register_user', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      username:this.state.username,\n      email: this.state.email,\n      password: this.state.passwd\n    }),\n    }).then(res => res.json())\n      .then(\n        (result) => {\n          if(result['response']==\"Done\")\n            this.props.history.push(\"/admin\");\n          else{\n            this.setState({ error: result['error'] });\n\n          }\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error: \"Invalid user or email. Please contact the Administrator\"\n          });\n        }\n      )\n\n  }\n  render() {\n    return (\n      <>\n        <Col lg=\"6\" md=\"8\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardBody className=\"px-lg-5 py-lg-5\">\n              <div className=\"text-center text-muted mb-4\">\n                <small>Sign up with credentials</small>\n              </div>\n              <Form role=\"form\">\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative mb-3\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-hat-3\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Username\" name = \"username\" type=\"username\" value = {this.state.username}  onChange={this.handleChange} autoComplete=\"new-email\"/>\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative mb-3\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-email-83\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Email\" name = \"email\" type=\"email\" value = {this.state.email}  onChange={this.handleChange} autoComplete=\"new-email\"/>\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-lock-circle-open\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Password\" type=\"password\" name = \"passwd\" value = {this.state.passwd}  onChange={this.handleChange} autoComplete=\"new-password\"/>\n                  </InputGroup>\n                </FormGroup>\n                {this.state.error && <p style={{ color: 'red' }}> Register Failed. {this.state.error} </p>}\n                <Row className=\"my-4\">\n                  <Col xs=\"12\">\n                    <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                      <input\n                        className=\"custom-control-input\"\n                        id=\"customCheckRegister\"\n                        type=\"checkbox\"\n                      />\n                      <label\n                        className=\"custom-control-label\"\n                        htmlFor=\"customCheckRegister\"\n                      >\n                        <span className=\"text-muted\">\n                          I agree with the{\" \"}\n                          <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                            Privacy Policy\n                          </a>\n                        </span>\n                      </label>\n                    </div>\n                  </Col>\n                </Row>\n                <div className=\"text-center\">\n                  <Button className=\"my-4\" color=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\n                    Create account\n                  </Button>\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </>\n    );\n  }\n}\n\nexport default Register;\n","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/examples/Accidents.js",["138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport \"../../assets/css/custom.css\"\n\n// reactstrap components\nimport {\n    Badge,\n    Card,\n    CardHeader,\n    Media,\n    Table,\n    Container,\n    Row,\n    Button, Col, Progress, DropdownToggle, DropdownMenu, DropdownItem, ButtonDropdown,\n} from \"reactstrap\";\n// core components\nimport Header from \"../../components/Headers/Header.js\";\nimport Maps from \"./Maps_Component.js\"\n\n\nfunction fix_date(st) {\n  let date = st.split('T');\n  let year = date[0];\n  let time  = date[1].split('.')[0];\n  return [year,time];\n}\n\nclass Accidents  extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.timer = null\n\n    this.toggleDrop1 = this.toggleDrop1.bind(this);\n    this.changeValueDrop1 = this.changeValueDrop1.bind(this);\n\n    this.toggleDrop2 = this.toggleDrop2.bind(this);\n    this.changeValueDrop2 = this.changeValueDrop2.bind(this);\n\n    this.toggleDrop3 = this.toggleDrop3.bind(this);\n    this.changeValueDrop3 = this.changeValueDrop3.bind(this);\n\n    this.state = {\n      table_data : [],\n      table_buttons:[],\n      curent_page:1,\n      num_accidents:0,\n      num_to_show:10,\n      dropDown1Value: \"Date/Hour\",\n      dropdownIndex:\"between\",\n      dropdownIndex2:\"All\",\n      dropdownIndex3:\"Descending\",\n      dropDown1Open: false,\n      dropDown2Value: \"From\",\n      dropDown2Open: false,\n      dropDown3Value: \"Order by\",\n      dropDown3Open: false,\n      error:false,\n      role:1\n\n    }\n  }\n\n  redirect_to_details = (index) => {\n    return <Redirect to={`/admin/accident_details/${index}`}/>\n  }\n\n  getData = async (id) => {\n      try {\n           const response = await fetch(\n              `/num_accidents?quantity=${this.state.dropdownIndex2}`\n          );\n\n          const result = await response.json();\n          this.setState(\n              prevState => (\n                  {\n                      num_accidents: result\n                  }\n              )\n          );\n          const response1 = await fetch(\n              `/range_accidents?id=${id}&filter=${this.state.dropdownIndex}&quantity=${this.state.dropdownIndex2}&order=${this.state.dropdownIndex3}`\n          );\n\n          const result1 = await response1.json();\n          if(result1.length==0)\n              this.setState(\n             prevState => (\n                 {\n                     error: \"No accidents do Show\"\n                 }\n             )\n         );\n          else\n              this.setState(\n                  prevState => (\n                      {\n                          table_data: result1,\n                          error: false\n                      }\n                  )\n              );\n          const req = await fetch(\n              '/home'\n          );\n\n          const rep = await req.json();\n          this.setState(\n              prevState => (\n                  {\n                      role:rep[\"role\"]\n                  }\n              )\n          );\n      }\n    catch(e){\n         this.setState(\n             prevState => (\n                 {\n                     error: \"No accidents do Show\"\n                 }\n             )\n         );\n     }\n  }\n\n  /* Sets status colors\n  *     0 -> red (this accident was not answered yet)\n  *     1 -> yellow (emergency services are on their way)\n  *     2 -> green (accident resolved)\n  */\n  setStatus = (value) => {\n      if (value === 2) {\n          return (\n              <Badge color=\"\" className=\"badge-dot badge-lg\">\n                <i className=\"bg-lime\" />\n              </Badge>\n          )\n      }\n      else if (value === 1){\n          return (\n              <Badge color=\"\" className=\"badge-dot badge-lg\">\n                <i className=\"bg-yellow\" />\n              </Badge>\n          )\n      }\n      else {\n          return (\n              <Badge color=\"\" className=\"badge-dot badge-lg\">\n                <i className=\"bg-red\" />\n              </Badge>\n          )\n      }\n  }\n\n   /* Sets fire colors\n  *     0 -> green (no fire)\n  *     1 -> red (fire)\n  */\n   setFire = (value) => {\n    if (value === 1) {\n        return (\n            <Badge color=\"\" className=\"badge-dot badge-lg\">\n              <i className=\"bg-red\" />\n            </Badge>\n        )\n    }\n    else {\n        return (\n            <Badge color=\"\" className=\"badge-dot badge-lg\">\n              <i className=\"bg-lime\" />\n            </Badge>\n        )\n    }\n}\n  getBarColor(damage){\n      if(damage<30){return\"bg-gradient-success\"\n      }else if(damage < 45){return\"bg-gradient-info\"\n      }else if(damage < 75){return\"bg-gradient-warning\"\n      }else{return\"bg-gradient-danger\"}\n  }\n\n  handleDelete(id){\n    fetch('/delete_accident/' + id,{method: 'POST'}).then(\n      response => response.json()\n    ).then(\n     result =>{\n      console.log(result)\n      this.getData()\n     }\n    )\n\n  }\n\n  renderArray = (value,index) => {\n    return(\n      <tr key={index} >\n        <th scope=\"row\">\n          <span className=\"mb-0 text-sm\">\n            {fix_date(value[\"date\"])[0]}<br/>{fix_date(value[\"date\"])[1]}\n          </span>\n        </th>\n        <th scope=\"row\" width=\"5%\">\n          <span className=\"mb-0 text-sm\">\n            {value[\"location\"][\"address\"].substring(0,45)}\n          </span>\n        </th>\n        <th scope=\"row\" width=\"5%\">\n          <span className=\"mb-0 text-sm\">\n            {value[\"city\"]}\n          </span>\n        </th>\n        <th scope = \"row\" style={{textAlign:\"center\"}}>\n          <span className=\"mb-0 text-sm\">\n            {value[\"n_cars_involved\"]}\n          </span>\n        </th>\n        <th scope = \"row\" style={{textAlign:\"center\"}}>\n          <span className=\"mb-0 text-sm\">\n            {value[\"n_people\"]}\n          </span>\n        </th>\n        <th scope = \"row\" style={{textAlign:\"center\"}}>\n          <span className=\"mb-0 text-sm\">\n            {value[\"n_people_injured\"]}\n          </span>\n        </th>\n       <th scope = \"row\" style={{textAlign:\"center\"}}>\n           <span className=\"mr-2\">{value[\"damage\"]}</span>\n           <div>\n               <Progress\n                  max=\"100\"\n                  value={value[\"damage\"]}\n                  barClassName={this.getBarColor(value[\"damage\"])}\n                />\n            </div>\n        </th>\n        <th scope = \"row\" style={{textAlign:\"center\"}}>\n            {this.setStatus(value[\"status\"])}\n        </th>\n        <th scope = \"row\" style={{textAlign:\"center\"}}>\n            {this.setFire(value[\"fire\"])}\n        </th>\n        <th scope = \"row\" style={{textAlign:\"center\"}}>\n            <Button\n                className=\"icon icon-shape bg-transparent border-default text-white rounded-circle\"\n                href={`/#admin/accident_details/${value[\"id\"]}`}\n                onClick={this.redirect_to_details.bind(this,value['id'])}\n            >\n              <i className=\"fas fa-ellipsis-h\"/>\n            </Button>\n            {/* delete button */}\n           {this.state.role==0 && (\n           <Button\n                className=\"icon icon-shape border-default bg-transparent text-danger \"\n                type=\"button\"\n                onClick={(e) => this.handleDelete(value['id'])}\n            >\n             <i className=\"fas fa-trash\"/>\n           </Button>)}\n        </th>\n      </tr>\n    )\n  }\n\n  renderButtons(){\n\n     if(this.state.num_accidents > this.state.num_to_show){\n      const Buttons = []\n      if(this.state.curent_page >1)\n        Buttons.push(<li className=\"page-item\"><a className=\"page-link\" onClick={(e)=>this.handleClick(e,this.state.curent_page-1)}><i\n                       className=\"fas fa-angle-left\"></i></a></li>)\n      for (let i = 1; i < Math.ceil(this.state.num_accidents/this.state.num_to_show)+1; i++) {\n        if(i==this.state.curent_page){\n          Buttons.push(<li className=\"page-item active\"><a className=\"page-link\" onClick={(e)=>this.handleClick(e,`${i}`)}>{i}</a></li>)\n        }\n        else{\n          Buttons.push(<li className=\"page-item\"><a className=\"page-link\" onClick={(e)=>this.handleClick(e,`${i}`)}>{i}</a></li>)\n        }\n      }\n      if(this.state.curent_page < Math.ceil(this.state.num_accidents/this.state.num_to_show) )\n        Buttons.push(<li className=\"page-item\"><a className=\"page-link\" onClick={(e)=>this.handleClick(e,parseInt(this.state.curent_page)+1)}><i\n                       className=\"fas fa-angle-right\"></i></a></li>)\n\n      return(\n              <div className=\"row justify-content-center\">\n                 <nav aria-label=\"Page navigation example\">\n                     <ul className=\"pagination\">\n                        {Buttons}\n                     </ul>\n                 </nav>\n              </div>\n      )}\n      else{\n          return\n      }\n  }\n\n  componentDidMount() {\n    this.getData(this.state.curent_page);\n    this.timer = setInterval(() => this.getData(this.state.curent_page), 10000)\n  }\n\n  componentWillUnmount(){\n    clearInterval(this.timer)\n    this.timer = null\n  }\n\n  handleClick = (e,id) => {\n    e.preventDefault();\n    this.state.curent_page=id\n    this.getData(id);\n  };\n\n /* DropDown functions */\n  toggleDrop1() {\n    this.setState({dropDown1Open: !this.state.dropDown1Open});\n  }\n\n  toggleDrop2() {\n      this.setState({dropDown2Open: !this.state.dropDown2Open});\n  }\n\n  toggleDrop3() {\n      this.setState({dropDown3Open: !this.state.dropDown3Open});\n  }\n\n  changeValueDrop1(e,id) {\n\n      const a = [\"\",\"between\",\"cars\",\"people\",\"injured\",\"severity\",\"status\",\"fire\"]\n      this.state.dropDown1Value= e.currentTarget.textContent\n      this.state.dropdownIndex= `${a[id]}`\n      this.getData(this.state.curent_page)\n  }\n\n  changeValueDrop2(e,id) {\n      this.state.dropDown2Value= e.currentTarget.textContent\n      this.state.dropdownIndex2= `${id}`\n      this.getData(this.state.curent_page)\n\n  }\n\n  changeValueDrop3(e,id) {\n      this.state.dropDown3Value= e.currentTarget.textContent\n      this.state.dropdownIndex3= `${id}`\n      this.getData(this.state.curent_page)\n  }\n\n\n  /**************************/\n\n  render() {\n    if(this.state.error ){\n        return (\n         <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          {/* Dark table */}\n          <Row className=\"mt-5\">\n            <div className=\"col\">\n              <Card className=\"bg-default shadow\">\n                <CardHeader className=\"bg-transparent border-0\">\n                  <Row >\n                    <Col>\n                      <div className=\"row ml\">\n                        <h1 className=\"text-white mb-0\" style={{ paddingLeft: 20}} >Accidents</h1>\n                      </div>\n                    </Col>\n                    <Col >\n                      {this.renderButtons()}\n                    </Col>\n                    <Col>\n                      <div className=\"row justify-content-end\">\n                        <h4 className=\"mr-2 mt-2 text-white\">Sort by: </h4>\n                        <ButtonDropdown isOpen={this.state.dropDown1Open} toggle={this.toggleDrop1}>\n                          <DropdownToggle caret>\n                            {this.state.dropDown1Value}\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop1(e,1)}>Date/Hour</DropdownItem>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop1(e,2)}>Nº cars</DropdownItem>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop1(e,3)}>Nº people</DropdownItem>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop1(e,4)}>Nº injured</DropdownItem>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop1(e,5)}>Severity</DropdownItem>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop1(e,6)}>Status</DropdownItem>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop1(e,7)}>Fire</DropdownItem>\n                          </DropdownMenu>\n                        </ButtonDropdown>\n                        <ButtonDropdown className={\"mr-2 ml-2\"} isOpen={this.state.dropDown2Open} toggle={this.toggleDrop2}>\n                          <DropdownToggle caret>\n                            {this.state.dropDown2Value}\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop2(e,\"Today\")}>Today</DropdownItem>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop2(e,\"Yesterday\")}>Yesterday</DropdownItem>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop2(e,\"Last Month\")}>Last Month</DropdownItem>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop2(e,\"All\")}>All</DropdownItem>\n                          </DropdownMenu>\n                        </ButtonDropdown>\n                        <ButtonDropdown isOpen={this.state.dropDown3Open} toggle={this.toggleDrop3}>\n                          <DropdownToggle caret>\n                            {this.state.dropDown3Value}\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop3(e,\"Ascending\")}>Ascending</DropdownItem>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop3(e,\"Descending\")}>Descending</DropdownItem>\n                          </DropdownMenu>\n                        </ButtonDropdown>\n                      </div>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <h1 className=\"text-white mb-0\" style={{textAlign:\"center\"}}> {this.state.error}</h1>\n                  <br/>\n              </Card>\n            </div>\n          </Row>\n        </Container>\n             </>);\n    }else{\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          {/* Dark table */}\n          <Row className=\"mt-5\">\n            <div className=\"col\">\n              <Card className=\"bg-default shadow\">\n                <CardHeader className=\"bg-transparent border-0\">\n                  <Row >\n                    <Col>\n                      <div className=\"row ml\">\n                        <h1 className=\"text-white mb-0\" style={{ paddingLeft: 20}} >Accidents</h1>\n                      </div>\n                    </Col>\n                    <Col >\n                      {this.renderButtons()}\n                    </Col>\n                    <Col>\n                      <div className=\"row justify-content-end\">\n                        <h4 className=\"mr-2 mt-2 text-white\">Sort by: </h4>\n                        <ButtonDropdown isOpen={this.state.dropDown1Open} toggle={this.toggleDrop1}>\n                          <DropdownToggle caret>\n                            {this.state.dropDown1Value}\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop1(e,1)}>Date/Hour</DropdownItem>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop1(e,2)}>Nº cars</DropdownItem>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop1(e,3)}>Nº people</DropdownItem>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop1(e,4)}>Nº injured</DropdownItem>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop1(e,5)}>Severity</DropdownItem>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop1(e,6)}>Status</DropdownItem>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop1(e,7)}>Fire</DropdownItem>\n                          </DropdownMenu>\n                        </ButtonDropdown>\n                        <ButtonDropdown className={\"mr-2 ml-2\"} isOpen={this.state.dropDown2Open} toggle={this.toggleDrop2}>\n                          <DropdownToggle caret>\n                            {this.state.dropDown2Value}\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop2(e,\"Today\")}>Today</DropdownItem>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop2(e,\"Yesterday\")}>Yesterday</DropdownItem>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop2(e,\"Last Month\")}>Last Month</DropdownItem>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop2(e,\"All\")}>All</DropdownItem>\n                          </DropdownMenu>\n                        </ButtonDropdown>\n                        <ButtonDropdown isOpen={this.state.dropDown3Open} toggle={this.toggleDrop3}>\n                          <DropdownToggle caret>\n                            {this.state.dropDown3Value}\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop3(e,\"Ascending\")}>Ascending</DropdownItem>\n                            <DropdownItem onClick={(e)=>this.changeValueDrop3(e,\"Descending\")}>Descending</DropdownItem>\n                          </DropdownMenu>\n                        </ButtonDropdown>\n                      </div>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <Table bordered\n                  className=\"align-items-center table-dark table-responsive\"\n                  hover\n                >\n                  <thead className=\"thead-dark\">\n                    <tr >\n                      <th scope=\"col \" style={{textAlign:\"center\"}}>\n                       <div align=\"center\" className=\"icon icon-shape bg-transparent text-white rounded-circle\">\n                         <i className=\"fas fa-calendar-alt\"/>\n                       </div>\n                      <div >\n                         <span className=\"ml-1\">Date/Hour</span>\n                      </div>\n                      </th>\n                      <th scope=\"col\"  style={{textAlign:\"center\"}}>\n                       <div  className=\"icon icon-shape bg-transparent text-white rounded-circle\" >\n                         <i  className=\"fas fa-map-marked-alt\"/>\n                       </div>\n                       <div >\n                         <span className=\"ml-1\">Location</span>\n                       </div>\n                      </th>\n                      <th scope=\"col\"  style={{textAlign:\"center\"}}>\n                       <div  className=\"icon icon-shape bg-transparent text-white rounded-circle\" >\n                         <i  className=\"fas fa-building\"/>\n                       </div>\n                       <div >\n                         <span className=\"ml-1\">City</span>\n                       </div>\n                      </th>\n                      <th scope=\"col\" style={{textAlign:\"center\"}}>\n                       <div className=\"icon icon-shape bg-transparent text-white rounded-circle\">\n                         <i className=\"fas fa-car\"/>\n                       </div>\n                       <div>\n                         <span className=\"ml-1\">Nº cars</span>\n                       </div>\n                      </th>\n                      <th scope=\"col\" style={{textAlign:\"center\"}}>\n                       <div className=\"icon icon-shape bg-transparent text-white rounded-circle\">\n                         <i className=\"fas fa-users\"/>\n                       </div>\n                      <div>\n                         <span className=\"ml-1\">Nº people</span>\n                       </div>\n                      </th>\n                      <th scope=\"col\" style={{textAlign:\"center\"}}>\n                        <div className=\"icon icon-shape bg-transparent text-white rounded-circle\">\n                          <i className=\"fas fa-user-injured\"/>\n                       </div>\n                      <div>\n                       <span className=\"ml-1\">Nºinjured</span>\n                      </div>\n                      </th>\n                      <th scope=\"col\"style={{textAlign:\"center\"}}>\n                       <div className=\"icon icon-shape bg-transparent text-white rounded-circle\">\n                         <i className=\"fas fa-exclamation-triangle\"/>\n                       </div>\n                      <div>\n                       <span className=\"ml-1\">Severity</span>\n                      </div>\n                      </th>\n                      <th scope=\"col\"style={{textAlign:\"center\"}}>\n                       <div className=\"icon icon-shape bg-transparent text-white rounded-circle\">\n                         <i className=\"fas fa-flag\"/>\n                       </div>\n                      <div>\n                       <span className=\"ml-1\">Status</span>\n                      </div>\n                      </th>\n                      <th scope=\"col\"style={{textAlign:\"center\"}}>\n                       <div className=\"icon icon-shape bg-transparent text-white rounded-circle\">\n                         <i className=\"fas fa-fire\"/>\n                       </div>\n                      <div>\n                       <span className=\"ml-1\">Fire</span>\n                      </div>\n                      </th>\n                      <th scope=\"col\" style={{textAlign:\"center\"}}   />\n\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state[\"table_data\"].map(this.renderArray)}\n                  </tbody>\n                </Table>\n                <CardHeader className=\"bg-transparent border-0\">\n                  <Row >\n                    <Col className=\"row justify-content-center\">\n                      {this.renderButtons()}\n                    </Col>\n                  </Row>\n                </CardHeader>\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }}\n}\n\nexport default Accidents;\n","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/examples/Edit_profile.js",["154","155"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"../../components/Headers/UserHeader.js\";\nimport {Redirect} from \"react-router-dom\";\n\nclass Edit_profile extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        user: [],\n        Username: \"\",\n        about: \"\",\n        address: \"\",\n        birth_date: \"\",\n        city: \"\",\n        country: \"\",\n        email: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        postal_code: \"\",\n        profession: \"\",\n        telephone: \"\",\n        work_institution: \"\"\n\n    }\n    this.handleChange = this.handleChange.bind(this);\n\n   }\n\n  getData = async () => {\n      try {\n           const response = await fetch(\n              `/home`\n          );\n\n          const result = await response.json();\n          this.setState(\n              prevState => (\n                  {\n                      Username: result[\"Username\"],\n                      email:result[\"email\"],\n                      about:result[\"about\"],\n                      address:result[\"address\"],\n                      birth_date:result[\"birth_date\"],\n                      country:result[\"country\"],\n                      city:result[\"city\"],\n                      first_name:result[\"first_name\"],\n                      last_name:result[\"last_name\"],\n                      postal_code:result[\"postal_code\"],\n                      profession:result[\"profession\"],\n                      telephone:result[\"telephone\"],\n                      work_institution:result[\"work_institution\"],\n                  }\n              )\n          );\n      }\n    catch(e){\n         this.setState(\n             prevState => (\n                 {\n                     error: \"No accidents do Show\"\n                 }\n             )\n         );\n     }\n  }\n  componentDidMount() {\n    this.getData();\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n     this.setState({\n          [name]: value\n    });\n    }\n\n   onSaveChanges = () => {\n      fetch('/update_user', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n\n          Username: this.state.Username,\n          last_email:this.state.email,\n          about:this.state.about,\n          address:this.state.address,\n          birth_date:this.state.birth_date,\n          country:this.state.country,\n          first_name:this.state.first_name,\n          last_name:this.state.last_name,\n          postal_code:this.state.postal_code,\n          profession:this.state.profession,\n          telephone:this.state.telephone,\n          work_institution:this.state.work_institution,\n    }),\n    }).then(res => res.json())\n      .then(\n        (result) => {\n          if(result['response']==\"Done\")\n            this.props.history.push(\"/admin\");\n          else{\n            this.setState({ error: result['error'] });\n\n          }\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error: \"error\"\n          });\n        }\n      )\n  }\n  render() {\n    return (\n      <>\n        <UserHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col>\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">My account</h3>\n                    </Col>\n                    {/*<Col className=\"text-right\" xs=\"4\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        Settings\n                      </Button>\n                    </Col>*/}\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      User information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-username\"\n                            >\n                              Username\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-username\"\n                              placeholder={this.state.Username}\n                              type=\"text\"\n                              name=\"Username\"\n                              value={this.state.Username}\n                              onChange={this.handleChange}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-email\"\n                            >\n                              Email address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-email\"\n                              name = \"email\"\n                              placeholder={this.state.email}\n                              type=\"email\"\n                              disabled\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-first-name\"\n                            >\n                              First name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-first-name\"\n                              placeholder={this.state.first_name}\n                              type=\"text\"\n                              name={\"first_name\"}\n                              value={this.state.first_name}\n                              onChange={this.handleChange}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-last-name\"\n                            >\n                              Last name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-last-name\"\n                              placeholder={this.state.last_name}\n                              type=\"text\"\n                              name=\"last_name\"\n                              value={this.state.last_name}\n                              onChange={this.handleChange}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"dateofbirth\"\n                            >\n                             Birth Date\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"dateofbirth\"\n                              type=\"date\"\n                              name=\"birth_date\"\n                              value={this.state.birth_date}\n                              onChange={this.handleChange}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Address */}\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Contact information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-address\"\n                            >\n                              Address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-address\"\n                              placeholder={this.state.address}\n                              type=\"text\"\n                              name=\"address\"\n                              value={this.state.address}\n                              onChange={this.handleChange}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-city\"\n                            >\n                              City\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-city\"\n                              name=\"city\"\n                              placeholder={this.state.city}\n                              type=\"text\"\n                              disabled\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Country\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"Portugal\"\n                              id=\"input-country\"\n                              placeholder={this.state.country}\n                              type=\"text\"\n                              name=\"country\"\n                              value={this.state.country}\n                              onChange={this.handleChange}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Postal code\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-postal-code\"\n                              placeholder=\"Postal code\"\n                              type={this.state.postal_code}\n                              value={this.state.postal_code}\n                              name=\"postal_code\"\n                              onChange={this.handleChange}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Telephone\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-postal-code\"\n                              placeholder={this.state.telephone}\n                              value={this.state.telephone}\n                              onChange={this.handleChange}\n                              name=\"telephone\"\n                              type=\"number\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Institution Info */}\n                     <h6 className=\"heading-small text-muted mb-4\">\n                      Institution\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-username\"\n                            >\n                              Work Institution\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-username\"\n                              placeholder={this.state.work_institution}\n                              value={this.state.work_institution}\n                              onChange={this.handleChange}\n                              name=\"work_institution\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-email\"\n                            >\n                              Profession\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-email\"\n                              placeholder={this.state.profession}\n                              value={this.state.profession}\n                              onChange={this.handleChange}\n                              type=\"email\"\n                              name=\"profession\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Description */}\n                    <h6 className=\"heading-small text-muted mb-4\">About me</h6>\n                    <div className=\"pl-lg-4\">\n                      <FormGroup>\n                        <label>About Me</label>\n                        <Input\n                          className=\"form-control-alternative\"\n                          placeholder=\"A few words about you ...\"\n                          rows=\"4\"\n                          defaultValue={this.state.about}\n                          value={this.state.about}\n                          onChange={this.handleChange}\n                          type=\"textarea\"\n                          name=\"about\"\n                        />\n                      </FormGroup>\n                    </div>\n                    <div className=\"pl-lg-4\">\n                      <Row className=\"justify-content-center\">\n                        <Button\n                          color=\"info\"\n                          href=\"/#admin/user-profile\"\n                          onClick= {this.onSaveChanges}\n                        >\n                          Save Changes\n                        </Button>\n                      </Row>\n                    </div>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Edit_profile;\n","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/examples/Users_table.js",["156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport \"../../assets/css/custom.css\"\n\n// reactstrap components\nimport {\n    Badge,\n    Card,\n    CardHeader,\n    Media,\n    Table,\n    Container,\n    Row,\n    Button, Col, Progress, DropdownToggle, DropdownMenu, DropdownItem, ButtonDropdown, Input,\n} from \"reactstrap\";\n// core components\nimport Header from \"../../components/Headers/Header.js\";\nimport Maps from \"./Maps_Component.js\"\n\n\nclass Users_table extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.timer = null\n\n    this.toggleDrop1 = this.toggleDrop1.bind(this);\n    this.changeValueDrop1 = this.changeValueDrop1.bind(this);\n    this.setEditMode=this.setEditMode.bind(this)\n    this.NewUser = this.NewUser.bind(this)\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      table_data : [],\n      table_data_original : [],\n      table_buttons:[],\n      curent_page:1,\n      num_accidents:0,\n      num_to_show:10,\n      dropDown1Value: \"Date/Hour\",\n      dropdownIndex:\"between\",\n      dropDown1Open: false,\n      error:false,\n      edit_mode:[],\n      addUser:false,\n      new_email:\"\",\n      new_role:\"\",\n      new_roleType:\"\",\n      new_city:\"\"\n    }\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n     this.setState({\n      [name]: value\n    });\n\n  }\n\n  handleChange2(event,id) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.state.table_data[id][name]=value\n    this.setState({\n      //table_data[0]=value\n    });\n  }\n   \n  handleSubmit(event) {\n    event.preventDefault();\n    fetch('/add_user', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      email: this.state.new_email,\n      role: this.state.new_role,\n      role_type: this.state.new_roleType,\n      city: this.state.new_city\n    }),\n    }).then(res => res.json())\n      .then(\n        (result) => {\n          if(result['response']==\"Done\"){\n            this.setState({\n                addUser: false,\n                new_email:\"\",\n                new_role:\"\",\n                new_roleType:\"\",\n                new_city:\"\"\n              }\n            )\n            this.getData()\n          }\n            \n          else{\n            this.setState({ error: result['error'] });\n\n          }\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error: \"error\"\n          });\n        }\n      )\n  }\n\n  handleDelete(mail){\n    fetch('/delete_user/' + mail,{method: 'POST'}).then(\n      response => response.json()\n    ).then(\n     result =>{\n      this.getData()\n     } \n    )\n\n  }\n\n  getData = async () => {\n      try {\n        const response1 = await fetch(\n          `/all_users`\n        );\n\n        const result1 = await response1.json();\n        if(result1.length===0){\n            this.setState(\n             prevState => (\n                 {\n                     error: \"No users to Show\"\n                 }\n             )\n         );}\n        else\n              if (this.state.edit_mode.length==0){\n                 for (let i = 0; i < result1.length; i++) {\n                      this.state.edit_mode.push(false)\n                    }\n             }\n              this.setState(\n                  prevState => (\n                      {\n                          table_data: result1,\n                          table_data_original:JSON.parse(JSON.stringify(result1)),\n                          error: false\n                      }\n                  )\n              );\n      }\n    catch(e){\n         this.setState(\n             prevState => (\n                 {\n                     error: \"No users to Show\"\n                 }\n             )\n         );\n     }\n  }\n\n  renderArray = (value,index) => {\n    if (this.state.edit_mode[parseInt(index)]){\n        return (\n            <tr key={index}>\n                <th scope=\"row\" style={{textAlign: \"center\"}}>\n                  <span className=\"mb-0 text-sm\">\n                    {value[\"id\"]}\n                  </span>\n                </th>\n                <th scope=\"row\" style={{textAlign: \"center\"}}>\n                  <span className=\"mb-0 text-sm\">\n                    <Input\n                      className=\"form-control-alternative\"\n                      id=\"Username\"\n                      placeholder={value[\"Username\"]}\n                      type=\"text\"\n                      name=\"Username\"\n                      value={value[\"Username\"]}\n                      onChange={(e) => this.handleChange2(e,index)}\n                    />\n                  </span>\n                </th>\n                <th scope=\"row\" style={{textAlign: \"center\"}}>\n          <span className=\"mb-0 text-sm\">\n              <Input\n                      className=\"form-control-alternative\"\n                      id=\"email\"\n                      placeholder={value[\"email\"]}\n                      type=\"text\"\n                      name=\"email\"\n                      value={value[\"email\"]}\n                      onChange={(e) => this.handleChange2(e,index)}\n                    />\n          </span>\n                </th>\n                <th scope=\"row\" style={{textAlign: \"center\"}}>\n          <span className=\"mb-0 text-sm\">\n              <Input\n                      className=\"form-control-alternative\"\n                      id=\"city\"\n                      placeholder={value[\"city\"]}\n                      type=\"text\"\n                      name=\"city\"\n                      value={value[\"city\"]}\n                      onChange={(e) => this.handleChange2(e,index)}\n                    />\n          </span>\n                </th>\n                <th scope=\"row\" style={{textAlign: \"center\"}}>\n          <span className=\"mb-0 text-sm\">\n              <Input\n                      className=\"form-control-alternative\"\n                      id=\"role\"\n                      placeholder={value[\"role\"]}\n                      type=\"text\"\n                      name=\"role\"\n                      value={value[\"role\"]}\n                      onChange={(e) => this.handleChange2(e,index)}\n                    />\n          </span>\n                </th>\n                <th scope=\"row\" style={{textAlign: \"center\"}}>\n          <span className=\"mb-0 text-sm\">\n              <Input\n                      className=\"form-control-alternative\"\n                      id=\"input-username\"\n                      placeholder={value[\"role_type\"]}\n                      type=\"text\"\n                      name=\"role_type\"\n                      value={value[\"role_type\"]}\n                      onChange={(e) => this.handleChange2(e,index)}\n                    />\n          </span>\n                </th>\n                <th scope=\"row\" style={{textAlign: \"center\"}}>\n          <span className=\"mb-0 text-sm\">\n            {value[\"last_login\"]}\n          </span>\n                </th>\n                <th scope=\"row\" style={{textAlign: \"center\"}}>\n                    {this.state.edit_mode[index] && (\n                        <Button\n                            className=\"icon icon-shape bg-success text-white rounded-circle\"\n                            type=\"button\"\n                            onClick={(e) => this.changeUserInfo(e,index)}\n                        >\n                            <i className=\"fas fa-check\"></i>\n                        </Button>\n                    )}\n                    {this.state.edit_mode[index] && (\n                        <Button\n                            className=\"icon icon-shape bg-warning text-white rounded-circle\"\n                            type=\"button\"\n                            onClick={(e) => this.setEditMode(index, false)}\n                        >\n                            <i className=\"fas fa-times\"></i>\n                        </Button>\n                    )}\n                    {/* delete button */}\n                    <Button\n                        className=\"icon icon-shape bg-danger text-white rounded-circle\"\n                        type=\"button\"\n                        onClick={(e) => this.handleDelete(value[\"email\"])}\n                    >\n                        <i className=\"fas fa-trash\"/>\n                    </Button>\n                </th>\n            </tr>\n        )\n    }\n    else {\n        return (\n\n            <tr key={index}>\n                <th scope=\"row\" style={{textAlign: \"center\"}}>\n          <span className=\"mb-0 text-sm\">\n            {value[\"id\"]}\n          </span>\n                </th>\n                <th scope=\"row\" style={{textAlign: \"center\"}}>\n          <span className=\"mb-0 text-sm\">\n            {value[\"Username\"]}\n          </span>\n                </th>\n                <th scope=\"row\" style={{textAlign: \"center\"}}>\n          <span className=\"mb-0 text-sm\">\n            {value[\"email\"]}\n          </span>\n                </th>\n                <th scope=\"row\" style={{textAlign: \"center\"}}>\n          <span className=\"mb-0 text-sm\">\n            {value[\"city\"]}\n          </span>\n                </th>\n                <th scope=\"row\" style={{textAlign: \"center\"}}>\n          <span className=\"mb-0 text-sm\">\n            {value[\"role\"]}\n          </span>\n                </th>\n                <th scope=\"row\" style={{textAlign: \"center\"}}>\n          <span className=\"mb-0 text-sm\">\n            {value[\"role_type\"]}\n          </span>\n                </th>\n                <th scope=\"row\" style={{textAlign: \"center\"}}>\n          <span className=\"mb-0 text-sm\">\n            {value[\"last_login\"]}\n          </span>\n                </th>\n                <th scope=\"row\" style={{textAlign: \"center\"}}>\n                    {this.state.edit_mode[index] && (\n                        <Button\n                            className=\"icon icon-shape bg-success text-white rounded-circle\"\n                            type=\"button\"\n                            onClick={(e) => this.setEditMode(index, false)}\n                        >\n                            <i className=\"fas fa-check\"></i>\n                        </Button>\n                    )}\n                    {this.state.edit_mode[index] && (\n                        <Button\n                            className=\"icon icon-shape bg-warning text-white rounded-circle\"\n                            type=\"button\"\n                            onClick={(e) => this.setEditMode(index, false)}\n                        >\n                            <i className=\"fas fa-times\"></i>\n                        </Button>\n                    )}\n                    <Button\n                        className=\"icon icon-shape bg-yellow text-white rounded-circle\"\n                        type=\"button\"\n                        onClick={(e) => this.setEditMode(index, true)}\n                    >\n                        <i className=\"fas fa-pencil-alt\"></i>\n                    </Button>\n                    {/* delete button */}\n                    <Button\n                        className=\"icon icon-shape bg-danger text-white rounded-circle\"\n                        type=\"button\"\n                        onClick={(e) => this.handleDelete(value[\"email\"])}\n                    >\n                        <i className=\"fas fa-trash\"/>\n                    </Button>\n                </th>\n            </tr>\n        )\n    }\n  }\n\n  renderButtons(){\n     if(this.state.num_accidents > this.state.num_to_show){\n      const Buttons = []\n      if(this.state.curent_page >1)\n        Buttons.push(\n            <li className=\"page-item\">\n                <a className=\"page-link\" onClick={(e)=>this.handleClick(e,this.state.curent_page-1)}>\n                    <i className=\"fas fa-angle-left\"/>\n                </a>\n            </li>\n        )\n      for (let i = 1; i < Math.ceil(this.state.num_accidents/this.state.num_to_show)+1; i++) {\n        if(i==this.state.curent_page){\n          Buttons.push(<li className=\"page-item active\"><a className=\"page-link\" onClick={(e)=>this.handleClick(e,`${i}`)}>{i}</a></li>)\n        }\n        else{\n          Buttons.push(<li className=\"page-item\"><a className=\"page-link\" onClick={(e)=>this.handleClick(e,`${i}`)}>{i}</a></li>)\n        }\n      }\n      if(this.state.curent_page < Math.ceil(this.state.num_accidents/this.state.num_to_show) )\n        Buttons.push(\n            <li className=\"page-item\">\n                <a className=\"page-link\" onClick={(e)=>this.handleClick(e,parseInt(this.state.curent_page)+1)}>\n                    <i className=\"fas fa-angle-right\"/>\n                </a>\n            </li>\n        )\n\n      return(\n              <div className=\"row justify-content-center\">\n                 <nav aria-label=\"Page navigation example\">\n                     <ul className=\"pagination\">\n                        {Buttons}\n                     </ul>\n                 </nav>\n              </div>\n      )}\n      else{\n          return\n      }\n  }\n\n  componentDidMount() {\n    this.getData();\n    //this.timer = setInterval(() => this.getData(), 10000)\n  }\n\n  componentWillUnmount(){\n    clearInterval(this.timer)\n    this.timer = null\n  }\n\n  handleClick = (e,id) => {\n    e.preventDefault();\n    this.state.curent_page=id\n    this.getData();\n  };\n\n /* DropDown functions */\n  toggleDrop1() {\n    this.setState({dropDown1Open: !this.state.dropDown1Open});\n  }\n\n  changeValueDrop1(e,id) {\n      const a = [\"\",\"between\",\"cars\",\"people\",\"injured\",\"severity\",\"status\"]\n      this.state.dropDown1Value= e.currentTarget.textContent\n      this.state.dropdownIndex= `${a[id]}`\n      this.getData(id)\n  }\n  setEditMode(index,value){\n      //console.log(this.state.table_data_original[parseInt(index)])\n      if (value==false){\n          this.state.table_data[parseInt(index)]=JSON.parse(JSON.stringify(this.state.table_data_original[parseInt(index)]))\n      }\n      this.state.edit_mode[parseInt(index)]=value\n      this.setState(\n                  prevState => (\n                      {\n                      }\n                  )\n              );\n  }\n\n  changeUserInfo(e,index){\n   // event.preventDefault();\n    this.state.edit_mode[parseInt(index)]=false;\n    fetch('/update_user', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      Username: this.state.table_data[index][\"Username\"],\n      email:this.state.table_data[index][\"email\"],\n      role: this.state.table_data[index][\"role\"],\n      role_type: this.state.table_data[index][\"role_type\"],\n      city: this.state.table_data[index][\"city\"],\n      last_email:this.state.table_data_original[index][\"email\"]\n    }),\n    }).then(res => res.json())\n       .then(\n        (result) => {\n          this.getData()\n\n          })\n  }\n\n\n  NewUser(){\n      this.setState(\n                  prevState => (\n                      {\n                        addUser:!this.state.addUser\n                      }\n                  )\n              );\n  }\n\n\n  /**************************/\n\n  render() {\n      if(this.state.error ){\n        return (\n         <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          {/* Dark table */}\n          <Row className=\"mt-5\">\n            <div className=\"col\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"bg-transparent border-0\">\n                  <Row >\n                    <Col>\n                      <div className=\"row ml\">\n                        <h1 className=\"mb-0\" style={{ paddingLeft: 20}} >Users</h1>\n                      </div>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <h1 className=\"text-danger mb-0\" style={{textAlign:\"center\"}}> {this.state.error}</h1>\n                  <br/>\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>);\n    }else{\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          {/* Dark table */}\n          <Row className=\"mt-5\">\n            <div className=\"col\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"bg-transparent border-0\">\n                  <Row >\n                    <Col>\n                      <div className=\"row ml\">\n                        <h1 className=\"mb-0\" style={{ paddingLeft: 20, paddingRight: 20}} >Users</h1>\n                        <Button\n                            className=\"icon icon-shape bg-green text-white rounded-circle\"\n                            type=\"button\"\n                            onClick={(e)=>this.NewUser()}\n                        >\n                         <i className=\"fas fa-plus\"/>\n                       </Button>\n                      </div>\n                    </Col>\n                    <Col >\n                      {this.renderButtons()}\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <Table bordered\n                  className=\"align-items-center table-flush\"\n                  hover\n                >\n                  <thead className=\"thead-light\">\n                    <tr >\n                      <th scope=\"col \" style={{textAlign:\"center\"}}>ID</th>\n                      <th scope=\"col\"  style={{textAlign:\"center\"}}>Username</th>\n                      <th scope=\"col\" style={{textAlign:\"center\"}}>Email</th>\n                      <th scope=\"col\" style={{textAlign:\"center\"}}>City</th>\n                      <th scope=\"col\" style={{textAlign:\"center\"}}>Role</th>\n                      <th scope=\"col\" style={{textAlign:\"center\"}}>Role ID</th>\n                      <th scope=\"col\" style={{textAlign:\"center\"}}>Last Login</th>\n                      <th scope=\"col\" style={{textAlign:\"center\"}}   />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.addUser && (\n                        <tr  >\n                            <th scope = \"row\" style={{textAlign:\"center\"}}>\n                                {/*id*/}\n                            </th>\n                            <th scope = \"row\" style={{textAlign:\"center\"}}>\n                            {/*Username*/}\n                            </th>\n                            <th scope = \"row\" style={{textAlign:\"center\"}}>\n                                <Input placeholder=\"email\" type=\"email\" name = \"new_email\" value = {this.state.new_email}  onChange={this.handleChange} autoComplete=\"new-password\"/>\n                            </th>\n                            <th scope = \"row\" style={{textAlign:\"center\"}}>\n                               <Input placeholder=\"City\" type=\"email\" name = \"new_city\" value = {this.state.new_city}  onChange={this.handleChange} autoComplete=\"new-password\"/>\n                            </th>\n                            <th scope = \"row\" style={{textAlign:\"center\"}}>\n                               <Input placeholder=\"Role\" type=\"email\" name = \"new_role\" value = {this.state.new_role}  onChange={this.handleChange} autoComplete=\"new-password\"/>\n                            </th>\n                            <th scope = \"row\" style={{textAlign:\"center\"}}>\n                                <Input placeholder=\"Role ID\" type=\"email\" name = \"new_roleType\" value = {this.state.new_roleType}  onChange={this.handleChange} autoComplete=\"new-password\"/>\n                            </th>\n                            <th scope = \"row\" style={{textAlign:\"center\"}}>\n\n                            </th>\n                            <th scope = \"row\" style={{textAlign:\"center\"}}>\n                                <Button\n                                    className=\"icon icon-shape bg-warning text-white rounded-circle\"\n                                    type=\"button\"\n                                    onClick={(e) => this.NewUser()}\n                                >\n                                    <i className=\"fas fa-times\"></i>\n                                </Button>\n\n                                <Button\n                                    className=\"icon icon-shape bg-green text-white rounded-circle\"\n                                    type=\"button\"\n                                    onClick={this.handleSubmit}\n                                >\n                                    <i className=\"fas fa-arrow-right\"></i>\n                               </Button>\n                            </th>\n                          </tr>\n                    )}\n                    {this.state[\"table_data\"].map(this.renderArray)}\n                  </tbody>\n                </Table>\n                <CardHeader className=\"bg-transparent border-0\">\n                  <Row >\n                    <Col className=\"row justify-content-center\">\n                      {this.renderButtons()}\n                    </Col>\n                  </Row>\n                </CardHeader>\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }}\n}\n\nexport default Users_table;\n","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/examples/Video_Call_Sender.js",["180","181","182","183","184","185","186","187","188","189","190","191","192","193","194"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport Webcam from \"react-webcam\";\nimport Stream from \"node-rtsp-stream\";\n\nimport \"./style.css\"\n\n\nimport JsmpegPlayer from '../../components/Players/JsmpegPlayer';\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n// core components\nimport Header from \"../../components/Headers/Header.js\";\n\n\nconst videoOptions = {\n    poster: 'https://cycjimmy.github.io/staticFiles/images/screenshot/big_buck_bunny_640x360.jpg'\n};\n  \nconst videoOverlayOptions = {};\n\nlet jsmpegPlayer = null;\n\nclass Video_Call_Sender extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {}\n\n  }\n\n\n  render() {\n    return (\n      <>\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        {/* Dark table */}\n        <Row className=\"mt-5\">\n            \n        </Row>\n            \n      </Container>\n      \n      </>\n      \n      \n    );\n  }\n\n}\n\n\n\n\nexport default Video_Call_Sender;\n","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/examples/Video_Call_Receiver.js",["195","196","197","198","199","200","201","202","203","204","205"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from 'react';\nimport './style.css'\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"../../components/Headers/UserHeader.js\";\nimport Header from \"../../components/Headers/Header.js\";\n\nimport {Redirect} from \"react-router-dom\";\n\nconst webSocket = new WebSocket(\"ws://127.0.0.1:5000\")\nwebSocket.onmessage = (event) => {\n  handleSignallingData(JSON.parse(event.data))\n}\n\nlet localStream\nlet peerConn\nlet username\nlet isAudio = true\nlet isVideo = true\n\nfunction handleSignallingData(data) {\n  switch (data.type) {\n      case \"offer\":\n          peerConn.setRemoteDescription(data.offer)\n          createAndSendAnswer()\n          break\n      case \"candidate\":\n          peerConn.addIceCandidate(data.candidate)\n  }\n}\n\nfunction createAndSendAnswer () {\n  peerConn.createAnswer((answer) => {\n      peerConn.setLocalDescription(answer)\n      sendData({\n          type: \"send_answer\",\n          answer: answer\n      })\n  }, error => {\n      console.log(error)\n  })\n}\n\nfunction sendData(data) {\n  data.username = username\n  webSocket.send(JSON.stringify(data))\n}\n\n\n\nfunction joinCall() {\n\n  username = document.getElementById(\"username-input\").value\n\n  document.getElementById(\"video-call-div\")\n  .style.display = \"inline\"\n\n  navigator.getUserMedia({\n      video: {\n          frameRate: 24,\n          width: {\n              min: 480, ideal: 720, max: 1280\n          },\n          aspectRatio: 1.33333\n      },\n      audio: true\n  }, (stream) => {\n      localStream = stream\n      document.getElementById(\"local-video\").srcObject = localStream\n\n      let configuration = {\n          iceServers: [\n              {\n                  \"urls\": [\"stun:stun.l.google.com:19302\", \n                  \"stun:stun1.l.google.com:19302\", \n                  \"stun:stun2.l.google.com:19302\"]\n              }\n          ]\n      }\n\n      peerConn = new RTCPeerConnection(configuration)\n      peerConn.addStream(localStream)\n\n      peerConn.onaddstream = (e) => {\n          document.getElementById(\"remote-video\")\n          .srcObject = e.stream\n      }\n\n      peerConn.onicecandidate = ((e) => {\n          if (e.candidate == null)\n              return\n          \n          sendData({\n              type: \"send_candidate\",\n              candidate: e.candidate\n          })\n      })\n\n      sendData({\n          type: \"join_call\"\n      })\n\n  }, (error) => {\n      console.log(error)\n  })\n}\n\n\nfunction muteAudio() {\n  isAudio = !isAudio\n  localStream.getAudioTracks()[0].enabled = isAudio\n}\n\n\nfunction muteVideo() {\n  isVideo = !isVideo\n  localStream.getVideoTracks()[0].enabled = isVideo\n}\n\n\nclass Video_Call_Receiver extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={}\n  }\n\n  \n\n\n  render() {\n    return (\n      <>\n      <Header />\n        <div className=\"Video_Call_Receiver\" >\n            <Input placeholder=\"Enter username...\"\n                type=\"text\"\n                id=\"username-input\" text-align=\"center\" />\n            <Button onclick={joinCall}>Join Call</Button>\n            <div id=\"video-call-div\">\n                <video muted id=\"local-video\" autoplay></video>\n                <video id=\"remote-video\" autoplay></video>\n                <div class=\"call-action-div\">\n                    <Button onclick={muteVideo}>Mute Video</Button>\n                    <Button onclick={muteAudio}>Mute Audio</Button>\n                </div>\n            </div>\n        </div>\n      </>\n    );\n  \n  }\n}\n\nexport default Video_Call_Receiver;\n","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/examples/AccidentDetails.js",["206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from \"react\";\nimport ImageGallery from 'react-image-gallery';\nimport \"../../assets/css/custom.css\"\nimport JsmpegPlayer from '../../components/Players/JsmpegPlayer';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport Reactpip from 'react-picture-in-picture';\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  Row,\n  Col,\n  CardTitle,\n  Button,\n  UncontrolledCollapse,\n  ButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem, Badge\n} from \"reactstrap\";\n// core components\nimport Header from \"../../components/Headers/Header.js\";\nimport Maps from \"./Maps_Component.js\";\nimport { Redirect } from \"react-router-dom\";\nimport UncontrolledAlert from \"reactstrap/lib/UncontrolledAlert\";\nimport { isConstructorDeclaration } from \"typescript\";\n\nconst PREFIX_URL = 'https://raw.githubusercontent.com/xiaolin/react-image-gallery/master/static/';\nconst MEDIA_URL = '/media/'\n\nconst videoOptions = {\n  poster: './big_buck_bunny_640x360.jpg'\n};\n\nconst videoOverlayOptions = {};\n\nlet jsmpegPlayer = null;\n\nfunction fix_date(st) {\n  let date = st.split('T');\n  let year = date[0];\n  let time = date[1].split('.')[0];\n  return year + \" \" + time;\n}\n\nclass AccidentDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.timer = null;\n\n    this.toggle = this.toggle.bind(this);\n    this.changeValue = this.changeValue.bind(this);\n\n    this.all_locations = [];\n\n    this.state = {\n      ambulance: 0,\n      user_ambulances: [],\n      showIndex: false,\n      showBullets: true,\n      infinite: true,\n      showThumbnails: true,\n      showFullscreenButton: true,\n      showGalleryFullscreenButton: true,\n      showPlayButton: false,\n      showGalleryPlayButton: false,\n      showNav: true,\n      isRTL: false,\n      slideDuration: 5,\n      slideInterval: 2000,\n      slideOnThumbnailOver: false,\n      thumbnailPosition: 'left',\n      showVideo: {},\n      video_total: 0,\n      photos_total: 0,\n      accident_data: {\n        car: [],\n        location: {\n          address: \" \",\n          coords: { lat: 40, lng: 30 },\n          coords_amb: { lat: 40, lng: 30 },\n        },\n        damage: 0.0,\n        date: \" \",\n        n_cars_involved: 0,\n        n_people_involved: 0,\n        n_people_injured: 0,\n      },\n      live_ports: [],\n      dropDownValue: 0,\n      dropDownOpen: false,\n    };\n    this.numImg = 0\n    this.images = [\n      {\n        thumbnail: ``,\n        original: ``,\n        source: '',\n        renderItem: this._renderVideo.bind(this)\n      },\n      {\n        original: ``,\n        thumbnail: ``,\n        imageSet: [\n          {\n            srcSet: `${PREFIX_URL}image_set_cropped.jpg`,\n            media: '(max-width: 1280px)',\n          },\n          {\n            srcSet: `${PREFIX_URL}image_set_default.jpg`,\n            media: '(min-width: 1280px)',\n          }\n        ]\n      },\n      {\n        original: `${PREFIX_URL}1.jpg`,\n        thumbnail: `${PREFIX_URL}1t.jpg`,\n        originalClass: 'featured-slide',\n        thumbnailClass: 'featured-thumb',\n      }\n    ]\n  }\n\n  //sempre que a pagina é atualizada esta funcao e chamada -> faz pedidos\n\n  get_data = async (id) => {\n\n    let all = await fetch(\n      `/list_accidents`);\n    let result_all = await all.json();\n    let all_locations = [];\n    for (let i = 0; i < result_all.length; i++) {\n      if (parseInt(result_all[i][\"id\"]) != parseInt(this.props.match.params['id'])) {\n        all_locations.push(\n          {\n            lat: result_all[i][\"location\"][\"lat\"],\n            lng: result_all[i][\"location\"][\"lng\"],\n            id: result_all[i][\"id\"],\n            status: 4\n          }\n        )\n      }\n    }\n    //carro acidentado\n    all_locations.push(\n      {\n        id: this.props.match.params['id'],\n        lat: this.state.accident_data.location.coords.lat,\n        lng: this.state.accident_data.location.coords.lng,\n        status: this.state.accident_data.status\n      }\n    )\n    //ambulancia\n    all_locations.push(\n      {\n        id: this.props.match.params['id'],\n        lat: this.state.accident_data.location.coords_amb.lat,\n        lng: this.state.accident_data.location.coords_amb.lng,\n        status: 3\n      }\n    )\n\n    if (this.state.surrounding_cars != undefined) {\n      for (let i = 0; i < this.state.surrounding_cars.length; i++) {\n        all_locations.push(\n          {\n            id: this.state.surrounding_cars[i]['car_id'],\n            lat: parseFloat(this.state.surrounding_cars[i]['latitude']),\n            lng: parseFloat(this.state.surrounding_cars[i]['longitude']),\n            id_acc: this.props.match.params['id'],\n            status: 5\n          }\n        )\n      }\n    }\n\n    if (this.state.surrounding_cameras != undefined) {\n      for (let i = 0; i < this.state.surrounding_cameras.length; i++) {\n        all_locations.push(\n          {\n            id: this.state.surrounding_cameras[i]['id'],\n            lat: parseFloat(this.state.surrounding_cameras[i]['latitude']),\n            lng: parseFloat(this.state.surrounding_cameras[i]['longitude']),\n            id_acc: this.props.match.params['id'],\n            status: 6\n          }\n        )\n      }\n    }\n\n    this.all_locations = all_locations;\n\n    let ports = await (await fetch(`/videos/${id}`)).json();\n\n    let response = await fetch(\n      `/markers/${id}`);\n    let ress = await response.json();\n\n    let carsResponse = await (await fetch(`/CarsMarkers/${id}`)).json();\n\n    response = await fetch(\n      `/accident/${id}`);\n    let result = await response.json();\n\n    response = await fetch(\n      `/ambulances_by_user`);\n    let resultee = await response.json();\n\n    \n    console.log(resultee)\n\n    //console.log(this.state.accident_data.location.coords_amb)\n    this.setState(prevState => (\n      {\n        accident_data: {\n          car: result['cars'],\n          location:\n          {\n            address: result['location']['address'],\n            coords: { lat: result['location']['lat'], lng: result['location']['lng'] },\n            coords_amb: { lat: parseFloat(ress[\"lat\"]), lng: parseFloat(ress[\"lng\"]) }\n          },\n          damage: result['damage'],\n          date: fix_date(result['date']),\n          n_cars_involved: result['n_cars_involved'],\n          n_people_involved: result['n_people'],\n          n_people_injured: parseInt(result['n_people_injured']),\n          status: result['status']\n        },\n        live_ports: ports[id],\n        surrounding_cars: carsResponse['carData'],\n        surrounding_cameras: prevState.surrounding_cameras,\n        video_total: parseInt(result['video_total,oca']),\n        dropDownValue: this.init_text_dropdown(parseInt(result['status'])),\n        user_ambulances: resultee\n      }\n    ));\n    //console.log(parseFloat(result['location']['lat'])+parseFloat(ress[\"lat\"]))\n    console.log(this.state.user_ambulances)\n    console.log(this.state.ambulance)\n\n    const resp = await fetch(\n      `/Nmedia/${id}/photos`);\n    const res = await resp.json();\n    this.numImg = parseInt(res)\n    const media = []\n/*     const user_ambs = []\n    for(let i = 1; i < resultee.length; i++) {\n      user_ambs.push(resultee[i])\n    }\n    this.user_ambulances = user_ambs\n    console.log(this.user_ambulances) */\n    if (this.state.video_total > 0) {\n      for (let i = 1; i < this.state.video_total + 1; i++) {\n        media.push({\n          thumbnail: `/media/${id}/video/${i}T.jpg`,\n          original: `/media/${id}/video/${i}T.jpg`,\n          source: `/media/${id}/video/${i}.mp4`,\n          renderItem: this._renderVideo.bind(this)\n        })\n      }\n    } else {\n      media.push({\n        thumbnail: `/media/novideo.png`,\n        original: `/media/novideo.png`\n      })\n    }\n    for (let i = 0; i < this.numImg; i++) {\n      media.push({\n        thumbnail: `/media/${id}/photos/${i}.jpeg`,\n        original: `/media/${id}/photos/${i}.jpeg`\n      })\n    }\n\n    this.setState(prevState => (\n      this.images = media\n    ));\n\n\n\n  }\n\n  get_cameras = async (id) => {\n\n    let all_locations = this.all_locations;\n    let camerasResponse = await (await fetch(`/CameraMarkers/${id}`)).json();\n\n    //console.log(camerasResponse)\n\n    this.setState(prevState => (\n      {\n        surrounding_cameras: camerasResponse['camData']\n      }\n    ));\n\n    //console.log(this.state.surrounding_cameras)\n\n    if (this.state.surrounding_cameras != undefined) {\n      for (let i = 0; i < this.state.surrounding_cameras.length; i++) {\n        all_locations.push(\n          {\n            id: this.state.surrounding_cameras[i]['id'],\n            lat: parseFloat(this.state.surrounding_cameras[i]['latitude']),\n            lng: parseFloat(this.state.surrounding_cameras[i]['longitude']),\n            id_acc: this.props.match.params['id'],\n            status: 6\n          }\n        )\n      }\n    }\n\n    this.all_locations = all_locations;\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params['id']\n    this.get_data(id)\n    this.get_cameras(id)  // get cameras only once\n    this.timer = setInterval(() => this.get_data(id), 1000) //5000\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.slideInterval !== prevState.slideInterval ||\n      this.state.slideDuration !== prevState.slideDuration) {\n      // refresh setInterval\n      this._imageGallery.pause();\n      this._imageGallery.play();\n    };\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer)\n    this.timer = null\n  }\n\n\n\n\n\n  renderAlertLives = (value, index) => {\n    return (\n      <UncontrolledAlert color=\"success\" class=\"alert\">\n        <span className=\"alert-inner--icon\">\n          <i className=\"ni ni-like-2\" />\n        </span>{\" \"}\n        <span className=\"alert-inner--text\">\n          <strong>A LIVESTREAM WAS FOUND!</strong>\n        </span>\n      </UncontrolledAlert> \n    );\n  }\n\n  renderUserAmbs = (value,index) => {\n    var amb = \"amb\"+String(index)\n    console.log(value+\"  \"+index)\n    return (\n      <option value={amb} >{value}</option>\n    )\n  }\n\n  renderLivestream = (value, index) => {\n\n    let port = String(value['port']).split(':')[2] - 9000;\n      if (port < 1000){\n        return (\n\n          <CardBody className=\"border rounded\">\n            <CardTitle\n              tag=\"h4\"\n              className=\"text-uppercase text-muted mb-0\"\n            >\n              Livestream {index + 1}\n            </CardTitle>\n\n            <CardBody className=\"align-content-center\">\n              <Row>\n                <span className=\"font-weight-bold\">Car id</span>\n                <span>: {String(port)}</span>\n              </Row>\n              <Col lg=\"6\" xl=\"9\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody className=\"border rounded border-info\">\n                    <Row>\n                        <div>\n\n                          <JsmpegPlayer\n                            wrapperClassName=\"video-wrapper\"\n                            videoUrl={String(value['port'])}\n                            options={videoOptions}\n                            overlayOptions={videoOverlayOptions}\n                            onRef={ref => jsmpegPlayer = ref}\n                          />\n\n                        </div>\n                      <div className=\"buttons-wrapper\">\n                        <Button onClick={() => jsmpegPlayer.play()}>Play</Button>\n                        <Button onClick={() => jsmpegPlayer.pause()}>Pause</Button>\n                        <Button onClick={() => jsmpegPlayer.stop()}>Stop</Button>\n                      </div>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n            </CardBody>\n          </CardBody>\n        )\n      }else{\n        return (\n\n          <CardBody className=\"border rounded\">\n            <CardTitle\n              tag=\"h4\"\n              className=\"text-uppercase text-muted mb-0\"\n            >\n              Livestream {index + 1}\n            </CardTitle>\n\n            <CardBody className=\"align-content-center\">\n              <Row>\n                <span className=\"font-weight-bold\">Camera id</span>\n                <span>: {String(port)}</span>\n              </Row>\n              <Col lg=\"6\" xl=\"9\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody className=\"border rounded border-info\">\n                    <Row>\n                      <div>\n\n                        <JsmpegPlayer\n                          wrapperClassName=\"video-wrapper\"\n                          videoUrl={String(value['port'])}\n                          options={videoOptions}\n                          overlayOptions={videoOverlayOptions}\n                          onRef={ref => jsmpegPlayer = ref}\n                        />\n                      </div>\n                      <div className=\"buttons-wrapper\">\n                        <Button onClick={() => jsmpegPlayer.play()}>Play</Button>\n                        <Button onClick={() => jsmpegPlayer.pause()}>Pause</Button>\n                        <Button onClick={() => jsmpegPlayer.stop()}>Stop</Button>\n                      </div>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n            </CardBody>\n          </CardBody>\n        )\n      }\n  }\n\n  renderCars = (value, index) => {\n\n    return (\n      <CardBody className=\"border rounded\">\n        <CardTitle\n          tag=\"h4\"\n          className=\"text-uppercase text-muted mb-0\"\n        >\n          Car {index + 1}\n        </CardTitle>\n        <CardBody className=\"align-content-center\">\n          <Row>\n            <span className=\"font-weight-bold\">Activated ABS</span>\n            <span>: {String(value['ABS'])}</span>\n          </Row>\n          <Row>\n            <span className=\"font-weight-bold\">Fired Airbag</span>\n            <span>: {String(value['airbag'])}</span>\n          </Row>\n          <Row>\n            <span className=\"font-weight-bold\">Passengers</span>\n            <span>: {value['n_people']} </span>\n          </Row>\n          <Row>\n            <span className=\"font-weight-bold\">Overturned</span>\n            <span>: {String(value['overturned'])}</span>\n          </Row>\n          <Row>\n            <span className=\"font-weight-bold\">Temperature</span>\n            <span>: {value['temperature']}</span>\n          </Row>\n          <Row>\n            <span className=\"font-weight-bold\">Collision velocity</span>\n            <span>: {value['velocity']}</span>\n          </Row>\n        </CardBody>\n      </CardBody>\n    )\n  }\n\n  _onImageClick(event) {\n    console.debug('clicked on image', event.target, 'at index', this._imageGallery.getCurrentIndex());\n  }\n\n  _onImageLoad(event) {\n    console.debug('loaded image', event.target.src);\n  }\n\n  _onSlide(index) {\n    this._resetVideo();\n    console.debug('slid to index', index);\n  }\n\n  _onPause(index) {\n    console.debug('paused on index', index);\n  }\n\n  _onScreenChange(fullScreenElement) {\n    console.debug('isFullScreen?', !!fullScreenElement);\n  }\n\n  _onPlay(index) {\n    console.debug('playing from index', index);\n  }\n\n  _resetVideo() {\n    this.setState({ showVideo: {} });\n\n    if (this.state.showPlayButton) {\n      this.setState({ showGalleryPlayButton: true });\n    }\n\n    if (this.state.showFullscreenButton) {\n      this.setState({ showGalleryFullscreenButton: true });\n    }\n  }\n\n  _toggleShowVideo(url) {\n    this.state.showVideo[url] = !Boolean(this.state.showVideo[url]);\n    this.setState({\n      showVideo: this.state.showVideo\n    });\n\n    if (this.state.showVideo[url]) {\n      if (this.state.showPlayButton) {\n        this.setState({ showGalleryPlayButton: false });\n      }\n\n      if (this.state.showFullscreenButton) {\n        this.setState({ showGalleryFullscreenButton: false });\n      }\n    }\n  }\n\n  _renderVideo(item) {\n    return (\n      <div>\n        {\n          this.state.showVideo[item.source] ?\n            <div className='video-wrapper'>\n              <a\n                className='close-video'\n                onClick={this._toggleShowVideo.bind(this, item.source)}\n              >\n              </a>\n              <video autoPlay controls>\n                // width='100%'\n                // height='100%'\n                  <source\n                  src={item.source}\n                  type=\"video/mp4\">\n\n                </source>\n                  // frameBorder='0'\n                  // allowFullScreen\n                </video>\n            </div>\n            :\n            <a onClick={this._toggleShowVideo.bind(this, item.source)}>\n              <div className='play-button' />\n              <img className='image-gallery-image' src={item.original} />\n              {\n                item.description &&\n                <span\n                  className='image-gallery-description'\n                  style={{ right: '0', left: 'initial', height: '100%' }}\n                >\n                  {item.description}\n                </span>\n              }\n            </a>\n        }\n      </div>\n    );\n  }\n\n  onGoBack = () => {\n    return <Redirect to=\"/admin/accidents\" />\n  }\n\n  /* Status dropdown functions */\n  toggle() {\n    this.setState({ dropDownOpen: !this.state.dropDownOpen });\n  }\n\n  changeValue(e) {\n    this.updateDBToSelectedStatus(e.currentTarget.textContent)\n    this.setState({ dropDownValue: e.currentTarget.textContent })\n\n  }\n\n  getBarColor(damage) {\n    if (damage < 30) {\n      return \"h2 font-weight-bold mb-0 text-success\"\n    } else if (damage < 45) {\n      return \"h2 font-weight-bold mb-0 text-teal\"\n    } else if (damage < 75) {\n      return \"h2 font-weight-bold mb-0 text-orange\"\n    } else { return \"h2 font-weight-bold mb-0 text-red\" }\n  }\n\n  setStatusColor() {\n    if (this.state.dropDownValue === \"Accident resolved\") {\n      return (\n        <Badge color=\"\" className=\"badge-dot badge-lg\">\n          <i className=\"bg-lime\" />\n        </Badge>\n      )\n    }\n    if (this.state.dropDownValue === \"Emergency services are on their way\") {\n      return (\n        <Badge color=\"\" className=\"badge-dot badge-lg\">\n          <i className=\"bg-yellow\" />\n        </Badge>\n      )\n    }\n    else {\n      return (\n        <Badge color=\"\" className=\"badge-dot badge-lg\">\n          <i className=\"bg-red\" />\n        </Badge>\n      )\n    }\n  }\n\n  init_text_dropdown(id) {\n    if (id === 2) {\n      return (\"Accident resolved\")\n    } else if (id === 1) {\n      return (\"Emergency services are on their way\")\n    } else { return (\"Accident still not answered\") }\n  }\n\n  updateDBToSelectedStatus(value) {\n    if (value === \"Accident resolved\") {\n      fetch(`/set_accident_status/${this.props.match.params['id']}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          \"status\": 2\n        })\n      })\n    }\n    if (value === \"Emergency services are on their way\") {\n      fetch(`/set_accident_status/${this.props.match.params['id']}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          \"status\": 1\n        })\n      })\n    }\n    else {\n      fetch(`/set_accident_status/${this.props.match.params['id']}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          \"status\": 0\n        })\n      })\n    }\n  }\n  handleClick = (e, id, value) => {\n    e.preventDefault();\n    let new_injured = this.state.accident_data.n_people_injured + value\n    if (new_injured >= 0) {\n      this.setState(() => (this.state.accident_data.n_people_injured = new_injured))\n      this.set_injured(id, new_injured);\n    }\n  };\n\n  getSelectValue= async () => {\n    var selectedValue = document.getElementById(\"ambs\");\n    var amb_id = selectedValue.options[selectedValue.selectedIndex].text\n    console.log(amb_id)\n    await this.myChangeHandler(amb_id)\n    console.log(\"asdasd\"+this.state.ambulance)\n    this.updateDBToSelectedStatus(\"Emergency services are on their way\")\n    var id = this.props.match.params['id']\n    fetch(`/markers/${id}`, {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        \"ambulance\": this.state.ambulance\n      })\n    }\n    ).then(response => {\n\n      return response.json()\n    })\n      .then(json => {\n\n        this.setState({ ambulance: json[0] })\n      })\n    \n  }\n  mySubmitHandler = (e, id) => {\n    e.preventDefault();\n    alert(\"You are submitting \" + this.state.ambulance);\n    //this.init_text_dropdown(1);\n    //this.changeValue(\"Emergency services are on their way\");\n    this.updateDBToSelectedStatus(\"Emergency services are on their way\")\n    fetch(`/markers/${id}`, {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        \"ambulance\": this.state.ambulance\n      })\n    }\n    ).then(response => {\n\n      return response.json()\n    })\n      .then(json => {\n\n        this.setState({ ambulance: json[0] })\n      })\n  }\n  myChangeHandler = (amb_id) => {\n    this.setState({ ambulance: amb_id });\n  }\n\n  set_injured(id, value) {\n    fetch(`/set_accident_injured/${id}`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        \"injured\": `${value}`\n      })\n    })\n  }\n\n\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Container className=\" mt--7\" fluid>\n          <Row>\n            <Col className=\" col\">\n              <Card className=\" shadow\">\n                <CardHeader className=\" bg-transparent\">\n                  <Row>\n                    <Col>\n                      <div className=\"d-flex\">\n                        <Button\n                          className=\"icon icon-shape bg-info text-white rounded-circle shadow\"\n                          href=\"/#admin/accidents\"\n                          onClick={this.onGoBack()}\n                        >\n                          <i className=\"fas fa-angle-left\" />\n                        </Button>\n                        <h2 className=\" mt-2 ml-4 \">Accident Details</h2>\n                      </div>\n                    </Col>\n                    <Col>\n                      <div className=\"row justify-content-end\">\n                        <div className=\"mr-2\">\n                          {this.setStatusColor()}\n                        </div>\n                        <div className=\"mr-2 \">\n                          <ButtonDropdown className=\"dropdown-width\" isOpen={this.state.dropDownOpen} toggle={this.toggle}>\n                            <DropdownToggle caret>\n                              {this.state.dropDownValue}\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                              <DropdownItem onClick={this.changeValue}>Accident still not answered</DropdownItem>\n                              <DropdownItem onClick={this.changeValue}>Emergency services are on their way</DropdownItem>\n                              <DropdownItem onClick={this.changeValue}>Accident resolved</DropdownItem>\n                            </DropdownMenu>\n                          </ButtonDropdown>\n                        </div>\n                      </div>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Row className=\"h-75 \">\n                    <Col>\n                      <Row >\n\n                        <div className=\"col\">\n                          <img src={require(\"../../assets/img/brand/accident_2021.png\")} style={{ height: \"100%\", width: \"100%\" }} />\n                        </div>\n                      </Row>\n                      <Row>\n                        <div className=\"col\">\n                          <p><strong>Address:</strong> {this.state.accident_data.location.address}</p>\n                        </div>\n                      </Row>\n                      <Row>\n                        <div className=\"col-sm\">\n                          <p><strong>Lat:</strong> {this.state.accident_data.location.coords.lat}</p>\n                        </div>\n                        <div className=\"col-sm\">\n                          <p><strong>Lng:</strong> {this.state.accident_data.location.coords.lng}</p>\n                        </div>\n                      </Row>\n                    </Col>\n                    <Col>\n                      <CardBody>\n                        <ImageGallery\n                          ref={i => this._imageGallery = i}\n                          items={this.images}\n                          lazyLoad={false}\n                          onClick={this._onImageClick.bind(this)}\n                          onImageLoad={this._onImageLoad}\n                          onSlide={this._onSlide.bind(this)}\n                          onPause={this._onPause.bind(this)}\n                          onScreenChange={this._onScreenChange.bind(this)}\n                          onPlay={this._onPlay.bind(this)}\n                          infinite={this.state.infinite}\n                          showBullets={this.state.showBullets}\n                          showFullscreenButton={this.state.showFullscreenButton && this.state.showGalleryFullscreenButton}\n                          showPlayButton={this.state.showPlayButton && this.state.showGalleryPlayButton}\n                          showThumbnails={this.state.showThumbnails}\n                          showIndex={this.state.showIndex}\n                          showNav={this.state.showNav}\n                          isRTL={this.state.isRTL}\n                          thumbnailPosition={this.state.thumbnailPosition}\n                          slideDuration={parseInt(this.state.slideDuration)}\n                          slideInterval={parseInt(this.state.slideInterval)}\n                          slideOnThumbnailOver={this.state.slideOnThumbnailOver}\n                          additionalClass=\"app-image-gallery\"\n                        />\n                      </CardBody>\n                    </Col>\n                  </Row>\n                  <Maps\n\n                    markers={this.all_locations}\n                    origem={this.state.accident_data.location.coords}\n                    destino={this.state.accident_data.location.coords_amb}\n\n                    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyA03XhgCxn-V9TsghBLpQ8LaScQLPgIJxs\"\n                    loadingElement={<div style={{ height: `100%` }} />}\n                    center={this.state.accident_data.location.coords}\n                    //center = {this.state.accident_data.location.coords_amb}\n                    //zoom={17}\n\n                    containerElement={\n                      <div\n                        className=\"map-canvas\"\n                        id=\"map-canvas\"\n                      />\n                    }\n                    mapElement={\n                      <div style={{ height: `100%`, borderRadius: \"inherit\" }} />\n                    }\n\n                  />\n                  <CardHeader>\n                    <h3> </h3>\n                  </CardHeader>\n                  {this.state.live_ports.map(this.renderAlertLives)}\n                  <Row>\n\n                    <Col lg=\"6\" xl=\"3\">\n                      <Card className=\"card-stats mb-4 mb-xl-0\">\n                        <CardBody className=\"border rounded border-info\">\n                          <Row>\n                            <div className=\"col\">\n                              <CardTitle\n                                tag=\"h5\"\n                                className=\"text-uppercase text-muted mb-0\"\n                              >\n                                Number of cars involved\n                                  </CardTitle>\n                              <span className=\"h2 font-weight-bold mb-0\">{this.state.accident_data.n_cars_involved}</span>\n                            </div>\n                            <Col className=\"col-auto\">\n                              <Button className=\"icon icon-shape bg-success text-dark rounded-circle shadow\" id=\"toggler\">\n                                <i className=\"fas fa-car\" />\n                              </Button>\n                            </Col>\n                          </Row>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                    <Col lg=\"6\" xl=\"3\">\n                      <Card className=\"card-stats mb-4 mb-xl-0\">\n                        <CardBody className=\"border rounded border-info\">\n\n                          <Row>\n                            <div className=\"col\">\n                              <CardTitle\n                                tag=\"h5\"\n                                className=\"text-uppercase text-muted mb-0\"\n                              >\n                                Number of persons involved\n                                  </CardTitle>\n                              <span className=\"h2 font-weight-bold mb-0\">\n                                {this.state.accident_data.n_people_involved}\n                              </span>\n                            </div>\n                            <Col className=\"col-auto\">\n                              <div className=\"icon icon-shape bg-info text-dark rounded-circle shadow\">\n                                <i className=\"fas fa-users\" />\n                              </div>\n                            </Col>\n                          </Row>\n\n                        </CardBody>\n                      </Card>\n                    </Col>\n                    <Col lg=\"6\" xl=\"3\">\n                      <Card className=\"card-stats mb-4 mb-xl-0\">\n                        <CardBody className=\"border rounded border-info\">\n                          <Row>\n                            <div className=\"col\">\n                              <CardTitle\n                                tag=\"h5\"\n                                className=\"text-uppercase text-muted mb-0\"\n                              >\n                                Number of persons injured\n                                </CardTitle>\n\n                              <span className=\"h2 font-weight-bold mb-0\">\n                                <Button className=\" icon-sm icon-shapesm bg-warning text-dark shadow\" onClick={(e) => this.handleClick(e, this.props.match.params['id'], -1)}>\n                                  <i className=\"fas fa-minus\" />\n                                </Button>\n                                {this.state.accident_data.n_people_injured}\n                                <Button className=\" icon-sm icon-shapesm bg-success text-dark shadow\" onClick={(e) => this.handleClick(e, this.props.match.params['id'], 1)}>\n                                  <i className=\"fas fa-plus\" />\n                                </Button>\n                              </span>\n\n                            </div>\n                            <Col className=\"col-auto\">\n                              <div className=\"icon icon-shape bg-danger text-dark rounded-circle shadow\">\n                                <i className=\"fas fa-user-injured\" />\n                              </div>\n                            </Col>\n                          </Row>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                    <Col lg=\"6\" xl=\"3\">\n                      <Card className=\"card-stats mb-4 mb-xl-0\">\n                        <CardBody className=\"border rounded border-info\">\n                          <Row>\n                            <div className=\"col\">\n                              <CardTitle\n                                tag=\"h5\"\n                                className=\"text-uppercase text-muted mb-0\"\n                              >\n                                Severity of the accident\n                                </CardTitle>\n                              <span className={this.getBarColor(this.state.accident_data.damage)}>\n                                {this.state.accident_data.damage}\n                              </span>\n                            </div>\n                            <Col className=\"col-auto\">\n                              <div className=\"icon icon-shape bg-yellow text-dark rounded-circle shadow\">\n                                <i className=\"fas fa-exclamation-triangle\" />\n                              </div>\n                            </Col>\n                          </Row>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                    <Col lg=\"6\" xl=\"3\">\n                      <Card className=\"card-stats mb-4 mb-xl-0\" >\n                        <CardBody className=\"border rounded border-info\">\n                          <Row>\n                            <div className=\"col\">\n                              <CardTitle\n                                tag=\"h5\"\n                                className=\"text-uppercase text-muted mb-0\"\n                              >\n                                Livestreams\n                                  </CardTitle>\n                              <span className=\"h2 font-weight-bold mb-0\">{this.state.live_ports.length}</span>\n                            </div>\n                            <Col className=\"col-auto\">\n                              <Button className=\"icon icon-shape bg-success text-dark rounded-circle shadow\" id=\"togglerLives\">\n                                <i className=\"fas fa-video\" />\n                              </Button>\n                            </Col>\n                          </Row>\n                        </CardBody>\n                      </Card>\n                    </Col>\n{/*                     <Col lg=\"6\" xl=\"3\">\n                      <Card className=\"card-stats mb-4 mb-xl-0\" style={{ width: \"35rem\" }} >\n                        <CardBody className=\"border rounded border-info\">\n                          <Row>\n                            <div className=\"col\">\n                              <CardTitle\n                                tag=\"h5\"\n                                className=\"text-uppercase text-muted mb-0\"\n                              >\n                                Ambulance:\n                              </CardTitle>\n                            </div>\n                          </Row>\n                        </CardBody>\n                      </Card>\n                    </Col> */}\n                    <Col lg=\"6\" xl=\"3\">\n                      <Card className=\"card-stats mb-4 mb-xl-0\" style={{ width: \"35rem\" }} >\n                        <CardBody className=\"border rounded border-info\">\n                          <Row>\n                            <div className=\"col\">\n                              <CardTitle\n                                tag=\"h5\"\n                                className=\"text-uppercase text-muted mb-0\"\n                              >\n{/*                                 <label >\n                                  <form onSubmit={(e) => this.mySubmitHandler(e, this.props.match.params['id'])}>\n                                    <h3>Ambulance: {this.state.ambulance}</h3>\n                                    <p>avaliable: {this.state.user_ambulances[0]},{this.state.user_ambulances[1]},{this.state.user_ambulances[2]}\n                                    ,{this.state.user_ambulances[3]}\n                                    </p>\n                                    ambulance id: {\"  \"}\n                                    <input\n                                      type='text'\n                                      onChange={this.myChangeHandler}\n                                    />\n                                    {\"  \"}\n                                    <input\n                                      type='submit'\n                                    />\n                                  </form>\n                                </label> */}\n                                <label>\n                                <div>\n                                <label for=\"ambs\">Choose a Ambulance&nbsp;</label>\n                                  <select name=\"ambs\" id=\"ambs\" onChange={this.getSelectValue}>\n                                    {/*this.renderUserAmbs(this.state.user_ambulances)*/}\n                                    {this.state.user_ambulances.map(this.renderUserAmbs)}\n                                  </select>\n                                </div>\n                                </label>\n                              </CardTitle>\n                            </div>\n                          </Row>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                  </Row>\n                  <UncontrolledCollapse toggler=\"#toggler\">\n                    <Card>\n                      <CardBody>\n                        <Row>\n                          {this.state.accident_data[\"car\"].map(this.renderCars)}\n                        </Row>\n                      </CardBody>\n                    </Card>\n                  </UncontrolledCollapse>\n                  <UncontrolledCollapse toggler=\"#togglerLives\">\n                    <Card>\n                      <CardBody>\n                        <Row>\n                          {this.state.live_ports.map(this.renderLivestream)}\n                        </Row>\n                      </CardBody>\n                    </Card>\n                  </UncontrolledCollapse>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default AccidentDetails;\n","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/views/examples/Maps_Component.js",["224","225","226","227","228","229"],"import React, { useState, useEffect } from \"react\";\n// react plugin used to create google maps\nimport {GoogleMap, Marker, withGoogleMap, withScriptjs, DirectionsRenderer} from \"react-google-maps\";\n//import getClientEnvironment from \"../../../config/env\";\n// core components\n/* global google */\n\nfunction MyDirectionsRenderer(props) {\n  const [directions, setDirections] = useState();\n  const { origem, destino, travelMode } = props;\n\n  useEffect(() => {\n    const directionsService = new google.maps.DirectionsService();\n    console.log(\"here\");\n    directionsService.route(\n      {\n        origin: new google.maps.LatLng(origem.lat, origem.lng),\n        destination: new google.maps.LatLng(destino.lat, destino.lng),\n        travelMode: travelMode\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          setDirections(result);\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n  }, [origem]);\n\n  return (\n    <React.Fragment>\n      {directions && <DirectionsRenderer directions={directions} options={{suppressMarkers:true}}/>}\n    </React.Fragment>\n  );\n}\n\n/*\nclass MapDirectionsRenderer extends React.Component {\n  state = {\n    directions: null,\n    error: null\n  };\n\n  componentDidMount() {\n    let { origem, destino, travelMode } = this.props;\n\n   \n    //const origin = waypoints.shift().location;\n    //const destination = waypoints.pop().location;\n    console.log(origem);\n    console.log(destino);\n\n    let directionsService = new google.maps.DirectionsService();\n    directionsService.route(\n      {\n        origin: new google.maps.LatLng(origem.lat, origem.lng),\n        destination: new google.maps.LatLng(destino.lat, destino.lng),\n        travelMode: travelMode\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.setState({\n            directions: result\n          });\n        } else {\n          this.setState({ error: result });\n        }\n      }\n    );\n  }\n\n  render() {\n    if (this.state.error) {\n      return <h1>{this.state.error}</h1>;\n    }\n    return <DirectionsRenderer directions={this.state.directions} />;\n  }\n}\n*/\nconst MapWrapper = withScriptjs(\n    withGoogleMap(props => \n    <GoogleMap\n            defaultCenter= {props.defaultCenter}\n            defaultZoom={props.zoom}\n            defaultOptions={{\n              scrollwheel: false,\n            }}\n            options={{disableAutoPan: true}}\n        >\n        {props.markers.map((props,index) =>{\n\n          return(\n          <Marker \n            position={{\n              lat: props.lat, \n              lng: props.lng\n            }}\n           key={index}\n           id={index}\n           options={{icon:`/accident_icon/${props.status}`}}\n           onClick={(() => \n            { if(props.id)\n                {window.location.href =`/#admin/accident_details/${props.id}`}\n              }\n              )}\n             />\n            );\n          })}\n        </GoogleMap>\n    ));\n\n\nfunction handleMarkerClick(id_acc, id_target) {\n  console.log(\"Marker clicked!\")\n  console.log(id_target)\n  let res = (fetch(`/startStream/${id_acc}/${id_target}`));\n}\n\nconst MapViewDirections_details =  withScriptjs(\nwithGoogleMap(props => <GoogleMap\n        center= {props.center}\n        defaultZoom={props.zoom}\n        defaultOptions={{\n          scrollwheel: false\n        }}\n    >,\n\n      <MyDirectionsRenderer\n        destino={props.origem}\n        origem={props.destino}\n        travelMode={google.maps.TravelMode.DRIVING}\n      />\n\n    {props.markers.map((props,index) =>\n      <Marker \n      position={{lat: props.lat, lng: props.lng}}\n      \n      options={{icon:`/accident_icon/${props.status}`}}\n        onClick={(() => \n        { if(props.id){\n            if (props.status != 5) {\n              {window.location.href =`/#admin/accident_details/${props.id}`}\n            }else{\n            {handleMarkerClick(props.id_acc, props.id)}\n            }\n          }\n        }\n        )}\n          >\n        </Marker>\n    )}\n    \n    </GoogleMap>\n));\n\nclass Maps extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      lat: 0,\n      lng: 0\n    }\n  }\n\n  componentDidMount(){\n    Promise.all([this.get_my_location()]).then((value) => {\n      this.setState(\n        {\n          lat: value[0].coords.latitude,\n          lng: value[0].coords.longitude\n        })})\n  }\n\n  get_my_location = () => {\n    if (navigator.geolocation) {\n      return new Promise(\n        (resolve, reject) => navigator.geolocation.getCurrentPosition(resolve, reject)\n      )\n    } else {\n      return new Promise(\n        resolve => resolve({})\n      )\n    }\n  }\n\n  render() \n  {\n    if (this.props.center)\n      return(\n        /*<MapWrapper_details\n        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDcLG_2KgktdQJXLaeyQZHJzmvcSjNwoPM\"\n        loadingElement={<div style={{ height: `100%` }} />}\n        center = {this.props.center}\n        zoom = {this.props.zoom}\n        markers = {this.props.markers}\n        containerElement={\n            <div\n                className=\"map-canvas\"\n                id=\"map-canvas\"\n            />\n        }\n        mapElement={this.props.mapElement}\n      />,*/\n      <MapViewDirections_details\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyA03XhgCxn-V9TsghBLpQ8LaScQLPgIJxs\"\n          loadingElement={<div style={{ height: `100%` }} />}\n          center = {this.state}\n          zoom = {this.props.zoom}\n          markers = {this.props.markers}\n          origem={this.props.origem}\n          destino={this.props.destino}\n          containerElement={\n              <div\n                  className=\"map-canvas\"\n                  id=\"map-canvas\"\n              />\n          }\n          mapElement={this.props.mapElement}\n        />\n    )\n    return (\n    <MapWrapper\n        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyA03XhgCxn-V9TsghBLpQ8LaScQLPgIJxs\"\n        loadingElement={<div style={{ height: `100%` }} />}\n        defaultCenter = {this.state}\n        zoom = {this.props.zoom}\n        markers = {this.props.markers}\n        containerElement={\n            <div\n                className=\"map-canvas\"\n                id=\"map-canvas\"\n            />\n        }\n        mapElement={this.props.mapElement}\n    />\n\n    );\n  }\n}\n\nexport default Maps;\n","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/components/Headers/Header.js",["230","231","232"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\nimport Timer from \"./Timer\";\nimport Example from \"./Example\"\n\n\n\nclass Header extends React.Component {\n\n  render() {\n    return (\n      <>\n        <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n          <Container fluid>\n            <div className=\"header-body\">\n              {/* Card stats */}\n              <Row>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <Example title={\"Reports\"}\n                             icon_name={\"icon icon-shape bg-purple text-white rounded-circle shadow\"}\n                             icon={\"fas fa-chart-bar\"}\n                    />\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <Example title={\"Accidents\"}\n                             icon_name={\"icon icon-shape bg-red text-white rounded-circle shadow\"}\n                             icon={\"fas fa-car-crash\"}\n                    />\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <Example title={\"Users\"}\n                             icon_name={\"icon icon-shape bg-yellow text-white rounded-circle shadow\"}\n                             icon={\"fas fa-users\"}\n                    />\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <Example title={\"Medical care\"}\n                             icon_name={\"icon icon-shape bg-blue text-white rounded-circle shadow\"}\n                             icon={\"fas fa-ambulance\"}\n                    />\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/components/Headers/UserHeader.js",["233"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Button, Container, Row, Col } from \"reactstrap\";\n\nclass UserHeader extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user:[]\n\n    }\n   }\n\n  getData = async () => {\n      try {\n           const response = await fetch(\n              `/home`\n          );\n\n          const result = await response.json();\n          this.setState(\n              prevState => (\n                  {\n                      user: result\n                  }\n              )\n          );\n      }\n    catch(e){\n         this.setState(\n             prevState => (\n                 {\n                     error: \"No accidents do Show\"\n                 }\n             )\n         );\n     }\n  }\n  componentDidMount() {\n    this.getData();\n  }\n  render() {\n    return (\n      <>\n        <div\n          className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\n          style={{\n            minHeight: \"300px\",\n            backgroundImage:\n              \"url(\" + require(\"../../assets/img/theme/fundo.jpg\") + \")\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center top\"\n          }}\n        >\n          {/* Mask */}\n          <span className=\"mask bg-gradient-default opacity-8\" />\n          {/* Header container */}\n          <Container className=\"d-flex align-items-center\" fluid>\n            <Row>\n              <Col lg=\"7\" md=\"10\">\n                <h1 className=\"display-2 text-white\">Hello {this.state.user[\"Username\"]}</h1>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserHeader;\n","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/variables/charts.js",[],"/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/components/Players/JsmpegPlayer.js",[],"/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/components/Headers/Example.js",["234"],"import React, { useState } from 'react';\nimport {\n  Carousel,\n  CarouselItem, Row, CardTitle, Col, CardBody\n} from 'reactstrap';\n\nconst items = [\n  {\n    accidents:Math.floor(Math.random() * 1000),\n    type:\"ACCIDENTS\",\n    name_view:\"Today\",\n    variation:(Math.random() * 20 - 10).toFixed(2),\n    classname_Arrow:\"fa fa-arrow-up\",\n    classname_color:\"text-success mr-2\",\n    since: \"Since yesterday\"\n  },\n  {\n    accidents:Math.floor(Math.random() * 1000),\n    type:\"ACCIDENTS\",\n    name_view:\"Week\",\n    variation:(Math.random() * 20 - 10).toFixed(2),\n    classname:\"fa fa-arrow-up\",\n    classname_color:\"text-success mr-2\",\n    since: \"Since last week\"\n  },\n  {\n    accidents:Math.floor(Math.random() * 1000),\n    type:\"ACCIDENTS\",\n    name_view:\"Month\",\n    variation:(Math.random() * 20 - 10).toFixed(2),\n    classname:\"fa fa-arrow-up\",\n    classname_color:\"text-success mr-2\",\n    since: \"Since last month\"\n  },\n];\n\nconst Example = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    if (items[nextIndex].variation > 0){\n      items[nextIndex].classname_Arrow=\"fa fa-arrow-up\"\n      items[nextIndex].classname_color = \"text-success mr-2\";\n    }else{\n      items[nextIndex].classname_Arrow=\"fa fa-arrow-down\"\n      items[nextIndex].classname_color = \"text-warning mr-2\";\n    }\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  }\n\n  const slides = items.map((item) => {\n    return (\n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item.src}\n      ><CardBody>\n          <Row>\n            <div className=\"col\">\n              <CardTitle\n                tag=\"h5\"\n                className=\"text-uppercase text-muted mb-0\"\n              >\n                {props.title}\n              </CardTitle>\n              <span className=\"h2 font-weight-bold mb-0\" id = \"teste\" >\n                {item.name_view + \"\\t\\t\"} {item.accidents}\n              </span>\n            </div>\n            <Col className=\"col-auto\">\n              <div className={props.icon_name}>\n                <i className={props.icon}/>\n              </div>\n            </Col>\n          </Row>\n          <p className=\"mt-3 mb-0 text-muted text-sm\">\n            <span id = \"span1\" className={item.classname_color}>\n              <i id = \"i1\" className={item.classname_Arrow} /> {item.variation}%\n            </span>{\" \"}\n            <span className=\"text-nowrap\">{item.since}</span>\n          </p>\n        </CardBody>\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <Carousel\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n    >\n      {slides}\n    </Carousel>\n  );\n}\n\nexport default Example;","/home/couto/Desktop/Universidade/PEI/arc2-webapp/react_frontend/src/components/Headers/Timer.js",["235","236","237","238"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\n\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    //static int a ++;\n    this.state = {\n        seconds: 0 ,\n        accidents:Math.floor(Math.random() * 1000),\n        type:\"ACCIDENTS\", name_view:\"Month\",\n        variation:(Math.random() * 20 - 10).toFixed(2)};\n  }\n\n  tick() {\n\n   var new_name_view=\"\"\n    if (this.state.seconds % 3 == 0){\n      new_name_view=\"Today\\t\\t\"\n    }else{\n      if(this.state.seconds % 2 == 0){\n        new_name_view=\"Week\\t\\t\"\n      }else{\n        new_name_view=\"Month\\t\\t\"\n      }\n    }\n    var new_variation=(Math.random() * 20 - 10).toFixed(2)\n    if(new_variation >0){\n        let elem = document.getElementById('span1');\n        elem.className = \"text-success mr-2\";\n        elem = document.getElementById('i1');\n        elem.className = \"fa fa-arrow-up\";\n    }else{\n       let elem = document.getElementById('span1');\n        elem.className = \"text-warning mr-2\";\n        elem = document.getElementById('i1');\n        elem.className = \"fa fa-arrow-down\";\n    }\n    document.getElementById(\"teste\").style.transition=\"width 2s\"\n   this.setState(state => ({\n       seconds: state.seconds + 1,\n       accidents: Math.floor(Math.random() * 1000),\n       type:state.type,\n       name_view: new_name_view,\n       variation: new_variation\n    }));\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.tick(), 3000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n        <CardBody>\n          <Row>\n            <div className=\"col\">\n              <CardTitle\n                tag=\"h5\"\n                className=\"text-uppercase text-muted mb-0\"\n              >\n              Accidents\n              </CardTitle>\n              <span className=\"h2 font-weight-bold mb-0\" id = \"teste\" >\n                {this.state.name_view + \"\\t\\t\"} {this.state.accidents}\n              </span>\n            </div>\n            <Col className=\"col-auto\">\n              <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                <i className=\"fas fa-chart-bar\" />\n              </div>\n            </Col>\n          </Row>\n          <p className=\"mt-3 mb-0 text-muted text-sm\">\n            <span id = \"span1\" className=\"text-success mr-2\">\n              <i id = \"i1\" className=\"fa fa-arrow-up\" /> {this.state.variation}%\n            </span>{\" \"}\n            <span className=\"text-nowrap\">Since last month</span>\n          </p>\n        </CardBody>\n    );\n  }\n}\n\nexport default Timer;\n",{"ruleId":"239","severity":1,"message":"240","line":27,"column":8,"nodeType":"241","messageId":"242","endLine":27,"endColumn":25},{"ruleId":"239","severity":1,"message":"243","line":28,"column":8,"nodeType":"241","messageId":"242","endLine":28,"endColumn":27},{"ruleId":"239","severity":1,"message":"244","line":27,"column":3,"nodeType":"241","messageId":"242","endLine":27,"endColumn":9},{"ruleId":"239","severity":1,"message":"245","line":34,"column":3,"nodeType":"241","messageId":"242","endLine":34,"endColumn":11},{"ruleId":"239","severity":1,"message":"246","line":35,"column":3,"nodeType":"241","messageId":"242","endLine":35,"endColumn":8},{"ruleId":"239","severity":1,"message":"247","line":26,"column":3,"nodeType":"241","messageId":"242","endLine":26,"endColumn":12},{"ruleId":"239","severity":1,"message":"248","line":27,"column":3,"nodeType":"241","messageId":"242","endLine":27,"endColumn":7},{"ruleId":"239","severity":1,"message":"249","line":28,"column":3,"nodeType":"241","messageId":"242","endLine":28,"endColumn":8},{"ruleId":"239","severity":1,"message":"250","line":24,"column":3,"nodeType":"241","messageId":"242","endLine":24,"endColumn":13},{"ruleId":"251","severity":1,"message":"252","line":72,"column":32,"nodeType":"253","messageId":"254","endLine":72,"endColumn":34},{"ruleId":"239","severity":1,"message":"250","line":24,"column":3,"nodeType":"241","messageId":"242","endLine":24,"endColumn":13},{"ruleId":"251","severity":1,"message":"252","line":73,"column":32,"nodeType":"253","messageId":"254","endLine":73,"endColumn":34},{"ruleId":"239","severity":1,"message":"255","line":27,"column":5,"nodeType":"241","messageId":"242","endLine":27,"endColumn":10},{"ruleId":"239","severity":1,"message":"256","line":35,"column":8,"nodeType":"241","messageId":"242","endLine":35,"endColumn":12},{"ruleId":"251","severity":1,"message":"252","line":105,"column":28,"nodeType":"253","messageId":"254","endLine":105,"endColumn":30},{"ruleId":"251","severity":1,"message":"252","line":272,"column":28,"nodeType":"253","messageId":"254","endLine":272,"endColumn":30},{"ruleId":"257","severity":1,"message":"258","line":290,"column":48,"nodeType":"259","endLine":290,"endColumn":133},{"ruleId":"251","severity":1,"message":"252","line":293,"column":13,"nodeType":"253","messageId":"254","endLine":293,"endColumn":15},{"ruleId":"257","severity":1,"message":"258","line":294,"column":57,"nodeType":"259","endLine":294,"endColumn":124},{"ruleId":"257","severity":1,"message":"258","line":297,"column":50,"nodeType":"259","endLine":297,"endColumn":117},{"ruleId":"257","severity":1,"message":"258","line":301,"column":48,"nodeType":"259","endLine":301,"endColumn":143},{"ruleId":"260","severity":1,"message":"261","line":330,"column":5,"nodeType":"262","messageId":"263","endLine":330,"endColumn":15},{"ruleId":"260","severity":1,"message":"261","line":350,"column":7,"nodeType":"262","messageId":"263","endLine":350,"endColumn":17},{"ruleId":"260","severity":1,"message":"261","line":351,"column":7,"nodeType":"262","messageId":"263","endLine":351,"endColumn":17},{"ruleId":"260","severity":1,"message":"261","line":356,"column":7,"nodeType":"262","messageId":"263","endLine":356,"endColumn":17},{"ruleId":"260","severity":1,"message":"261","line":357,"column":7,"nodeType":"262","messageId":"263","endLine":357,"endColumn":17},{"ruleId":"260","severity":1,"message":"261","line":363,"column":7,"nodeType":"262","messageId":"263","endLine":363,"endColumn":17},{"ruleId":"260","severity":1,"message":"261","line":364,"column":7,"nodeType":"262","messageId":"263","endLine":364,"endColumn":17},{"ruleId":"239","severity":1,"message":"264","line":35,"column":9,"nodeType":"241","messageId":"242","endLine":35,"endColumn":17},{"ruleId":"251","severity":1,"message":"252","line":135,"column":32,"nodeType":"253","messageId":"254","endLine":135,"endColumn":34},{"ruleId":"239","severity":1,"message":"264","line":19,"column":9,"nodeType":"241","messageId":"242","endLine":19,"endColumn":17},{"ruleId":"239","severity":1,"message":"265","line":24,"column":5,"nodeType":"241","messageId":"242","endLine":24,"endColumn":10},{"ruleId":"239","severity":1,"message":"255","line":27,"column":5,"nodeType":"241","messageId":"242","endLine":27,"endColumn":10},{"ruleId":"239","severity":1,"message":"245","line":31,"column":18,"nodeType":"241","messageId":"242","endLine":31,"endColumn":26},{"ruleId":"239","severity":1,"message":"266","line":31,"column":28,"nodeType":"241","messageId":"242","endLine":31,"endColumn":42},{"ruleId":"239","severity":1,"message":"267","line":31,"column":44,"nodeType":"241","messageId":"242","endLine":31,"endColumn":56},{"ruleId":"239","severity":1,"message":"268","line":31,"column":58,"nodeType":"241","messageId":"242","endLine":31,"endColumn":70},{"ruleId":"239","severity":1,"message":"269","line":31,"column":72,"nodeType":"241","messageId":"242","endLine":31,"endColumn":86},{"ruleId":"239","severity":1,"message":"256","line":35,"column":8,"nodeType":"241","messageId":"242","endLine":35,"endColumn":12},{"ruleId":"260","severity":1,"message":"261","line":88,"column":5,"nodeType":"262","messageId":"263","endLine":88,"endColumn":30},{"ruleId":"251","severity":1,"message":"252","line":108,"column":32,"nodeType":"253","messageId":"254","endLine":108,"endColumn":34},{"ruleId":"251","severity":1,"message":"252","line":161,"column":46,"nodeType":"253","messageId":"254","endLine":161,"endColumn":48},{"ruleId":"257","severity":1,"message":"258","line":382,"column":17,"nodeType":"259","endLine":382,"endColumn":102},{"ruleId":"251","severity":1,"message":"252","line":388,"column":13,"nodeType":"253","messageId":"254","endLine":388,"endColumn":15},{"ruleId":"257","severity":1,"message":"258","line":389,"column":57,"nodeType":"259","endLine":389,"endColumn":124},{"ruleId":"257","severity":1,"message":"258","line":392,"column":50,"nodeType":"259","endLine":392,"endColumn":117},{"ruleId":"257","severity":1,"message":"258","line":398,"column":17,"nodeType":"259","endLine":398,"endColumn":112},{"ruleId":"260","severity":1,"message":"261","line":430,"column":5,"nodeType":"262","messageId":"263","endLine":430,"endColumn":15},{"ruleId":"260","severity":1,"message":"261","line":441,"column":7,"nodeType":"262","messageId":"263","endLine":441,"endColumn":17},{"ruleId":"260","severity":1,"message":"261","line":442,"column":7,"nodeType":"262","messageId":"263","endLine":442,"endColumn":17},{"ruleId":"251","severity":1,"message":"252","line":447,"column":16,"nodeType":"253","messageId":"254","endLine":447,"endColumn":18},{"ruleId":"260","severity":1,"message":"261","line":448,"column":11,"nodeType":"262","messageId":"263","endLine":448,"endColumn":32},{"ruleId":"260","severity":1,"message":"261","line":450,"column":7,"nodeType":"262","messageId":"263","endLine":450,"endColumn":27},{"ruleId":"260","severity":1,"message":"261","line":461,"column":5,"nodeType":"262","messageId":"263","endLine":461,"endColumn":25},{"ruleId":"239","severity":1,"message":"264","line":19,"column":9,"nodeType":"241","messageId":"242","endLine":19,"endColumn":17},{"ruleId":"239","severity":1,"message":"270","line":20,"column":8,"nodeType":"241","messageId":"242","endLine":20,"endColumn":14},{"ruleId":"239","severity":1,"message":"271","line":21,"column":8,"nodeType":"241","messageId":"242","endLine":21,"endColumn":14},{"ruleId":"239","severity":1,"message":"272","line":26,"column":8,"nodeType":"241","messageId":"242","endLine":26,"endColumn":20},{"ruleId":"239","severity":1,"message":"244","line":30,"column":3,"nodeType":"241","messageId":"242","endLine":30,"endColumn":9},{"ruleId":"239","severity":1,"message":"273","line":31,"column":3,"nodeType":"241","messageId":"242","endLine":31,"endColumn":7},{"ruleId":"239","severity":1,"message":"250","line":32,"column":3,"nodeType":"241","messageId":"242","endLine":32,"endColumn":13},{"ruleId":"239","severity":1,"message":"274","line":33,"column":3,"nodeType":"241","messageId":"242","endLine":33,"endColumn":11},{"ruleId":"239","severity":1,"message":"247","line":34,"column":3,"nodeType":"241","messageId":"242","endLine":34,"endColumn":12},{"ruleId":"239","severity":1,"message":"248","line":35,"column":3,"nodeType":"241","messageId":"242","endLine":35,"endColumn":7},{"ruleId":"239","severity":1,"message":"249","line":36,"column":3,"nodeType":"241","messageId":"242","endLine":36,"endColumn":8},{"ruleId":"239","severity":1,"message":"275","line":39,"column":3,"nodeType":"241","messageId":"242","endLine":39,"endColumn":6},{"ruleId":"239","severity":1,"message":"276","line":45,"column":7,"nodeType":"241","messageId":"242","endLine":45,"endColumn":19},{"ruleId":"239","severity":1,"message":"277","line":49,"column":7,"nodeType":"241","messageId":"242","endLine":49,"endColumn":26},{"ruleId":"239","severity":1,"message":"278","line":51,"column":5,"nodeType":"241","messageId":"242","endLine":51,"endColumn":17},{"ruleId":"239","severity":1,"message":"273","line":24,"column":3,"nodeType":"241","messageId":"242","endLine":24,"endColumn":7},{"ruleId":"239","severity":1,"message":"250","line":25,"column":3,"nodeType":"241","messageId":"242","endLine":25,"endColumn":13},{"ruleId":"239","severity":1,"message":"274","line":26,"column":3,"nodeType":"241","messageId":"242","endLine":26,"endColumn":11},{"ruleId":"239","severity":1,"message":"247","line":27,"column":3,"nodeType":"241","messageId":"242","endLine":27,"endColumn":12},{"ruleId":"239","severity":1,"message":"248","line":28,"column":3,"nodeType":"241","messageId":"242","endLine":28,"endColumn":7},{"ruleId":"239","severity":1,"message":"279","line":30,"column":3,"nodeType":"241","messageId":"242","endLine":30,"endColumn":12},{"ruleId":"239","severity":1,"message":"280","line":31,"column":3,"nodeType":"241","messageId":"242","endLine":31,"endColumn":6},{"ruleId":"239","severity":1,"message":"275","line":32,"column":3,"nodeType":"241","messageId":"242","endLine":32,"endColumn":6},{"ruleId":"239","severity":1,"message":"281","line":35,"column":8,"nodeType":"241","messageId":"242","endLine":35,"endColumn":18},{"ruleId":"239","severity":1,"message":"264","line":38,"column":9,"nodeType":"241","messageId":"242","endLine":38,"endColumn":17},{"ruleId":"282","severity":1,"message":"283","line":52,"column":3,"nodeType":"284","messageId":"285","endLine":59,"endColumn":4},{"ruleId":"239","severity":1,"message":"286","line":18,"column":17,"nodeType":"241","messageId":"242","endLine":18,"endColumn":25},{"ruleId":"239","severity":1,"message":"287","line":22,"column":9,"nodeType":"241","messageId":"242","endLine":22,"endColumn":30},{"ruleId":"239","severity":1,"message":"288","line":22,"column":32,"nodeType":"241","messageId":"242","endLine":22,"endColumn":51},{"ruleId":"239","severity":1,"message":"289","line":23,"column":8,"nodeType":"241","messageId":"242","endLine":23,"endColumn":16},{"ruleId":"239","severity":1,"message":"290","line":46,"column":10,"nodeType":"241","messageId":"242","endLine":46,"endColumn":34},{"ruleId":"239","severity":1,"message":"291","line":49,"column":7,"nodeType":"241","messageId":"242","endLine":49,"endColumn":16},{"ruleId":"251","severity":1,"message":"292","line":154,"column":41,"nodeType":"253","messageId":"254","endLine":154,"endColumn":43},{"ruleId":"251","severity":1,"message":"292","line":184,"column":37,"nodeType":"253","messageId":"254","endLine":184,"endColumn":39},{"ruleId":"251","severity":1,"message":"292","line":198,"column":40,"nodeType":"253","messageId":"254","endLine":198,"endColumn":42},{"ruleId":"251","severity":1,"message":"292","line":319,"column":40,"nodeType":"253","messageId":"254","endLine":319,"endColumn":42},{"ruleId":"260","severity":1,"message":"261","line":552,"column":5,"nodeType":"262","messageId":"263","endLine":552,"endColumn":25},{"ruleId":"257","severity":1,"message":"258","line":574,"column":15,"nodeType":"259","endLine":577,"endColumn":16},{"ruleId":"293","severity":1,"message":"294","line":579,"column":40,"nodeType":"295","messageId":"296","endLine":582,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":586,"column":26,"nodeType":"295","messageId":"296","endLine":589,"endColumn":17},{"ruleId":"257","severity":1,"message":"258","line":592,"column":13,"nodeType":"259","endLine":592,"endColumn":72},{"ruleId":"297","severity":1,"message":"298","line":594,"column":15,"nodeType":"259","endLine":594,"endColumn":74},{"ruleId":"260","severity":1,"message":"261","line":700,"column":28,"nodeType":"262","messageId":"263","endLine":700,"endColumn":52},{"ruleId":"297","severity":1,"message":"298","line":823,"column":27,"nodeType":"259","endLine":823,"endColumn":134},{"ruleId":"299","severity":1,"message":"300","line":29,"column":6,"nodeType":"301","endLine":29,"endColumn":14,"suggestions":"302"},{"ruleId":"239","severity":1,"message":"303","line":117,"column":7,"nodeType":"241","messageId":"242","endLine":117,"endColumn":10},{"ruleId":"251","severity":1,"message":"292","line":142,"column":30,"nodeType":"253","messageId":"254","endLine":142,"endColumn":32},{"ruleId":"304","severity":1,"message":"305","line":143,"column":15,"nodeType":"306","messageId":"307","endLine":143,"endColumn":77},{"ruleId":"304","severity":1,"message":"305","line":145,"column":13,"nodeType":"306","messageId":"307","endLine":145,"endColumn":56},{"ruleId":"308","severity":1,"message":"309","line":207,"column":7,"nodeType":"259","messageId":"310","endLine":222,"endColumn":11},{"ruleId":"239","severity":1,"message":"274","line":21,"column":16,"nodeType":"241","messageId":"242","endLine":21,"endColumn":24},{"ruleId":"239","severity":1,"message":"311","line":21,"column":26,"nodeType":"241","messageId":"242","endLine":21,"endColumn":35},{"ruleId":"239","severity":1,"message":"312","line":22,"column":8,"nodeType":"241","messageId":"242","endLine":22,"endColumn":13},{"ruleId":"239","severity":1,"message":"244","line":21,"column":10,"nodeType":"241","messageId":"242","endLine":21,"endColumn":16},{"ruleId":"239","severity":1,"message":"313","line":60,"column":9,"nodeType":"241","messageId":"242","endLine":60,"endColumn":18},{"ruleId":"239","severity":1,"message":"273","line":21,"column":10,"nodeType":"241","messageId":"242","endLine":21,"endColumn":14},{"ruleId":"239","severity":1,"message":"279","line":21,"column":37,"nodeType":"241","messageId":"242","endLine":21,"endColumn":46},{"ruleId":"251","severity":1,"message":"252","line":38,"column":32,"nodeType":"253","messageId":"254","endLine":38,"endColumn":34},{"ruleId":"251","severity":1,"message":"252","line":41,"column":33,"nodeType":"253","messageId":"254","endLine":41,"endColumn":35},"no-unused-vars","'Video_Call_Sender' is defined but never used.","Identifier","unusedVar","'Video_Call_Receiver' is defined but never used.","'Button' is defined but never used.","'Progress' is defined but never used.","'Table' is defined but never used.","'FormGroup' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'CardHeader' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Media' is defined but never used.","'Maps' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'Redirect' is defined but never used.","'Badge' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'ButtonDropdown' is defined but never used.","'Webcam' is defined but never used.","'Stream' is defined but never used.","'JsmpegPlayer' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'Col' is defined but never used.","'videoOptions' is assigned a value but never used.","'videoOverlayOptions' is assigned a value but never used.","'jsmpegPlayer' is assigned a value but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'UserHeader' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","'NotificationContainer' is defined but never used.","'NotificationManager' is defined but never used.","'Reactpip' is defined but never used.","'isConstructorDeclaration' is defined but never used.","'MEDIA_URL' is assigned a value but never used.","Expected '!==' and instead saw '!='.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'destino.lat', 'destino.lng', and 'travelMode'. Either include them or remove the dependency array.","ArrayExpression",["314"],"'res' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-pascal-case","Imported JSX component MapViewDirections_details must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","'CardTitle' is defined but never used.","'Timer' is defined but never used.","'goToIndex' is assigned a value but never used.",{"desc":"315","fix":"316"},"Update the dependencies array to be: [destino.lat, destino.lng, origem, travelMode]",{"range":"317","text":"318"},[988,996],"[destino.lat, destino.lng, origem, travelMode]"]